   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"servo.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	servo_init
  20              		.thumb
  21              		.thumb_func
  23              	servo_init:
  24              	.LFB29:
  25              		.file 1 "../servo.c"
   1:../servo.c    **** /*
   2:../servo.c    ****  * servo.c
   3:../servo.c    ****  *
   4:../servo.c    ****  *  Created on: 21.06.2012
   5:../servo.c    ****  *      Author: simon
   6:../servo.c    ****  */
   7:../servo.c    **** 
   8:../servo.c    **** #include "stm32f10x_gpio.h"
   9:../servo.c    **** #include "stm32f10x_tim.h"
  10:../servo.c    **** #include "stm32f10x_rcc.h"
  11:../servo.c    **** #include "servo.h"
  12:../servo.c    **** 
  13:../servo.c    **** void servo_init()
  14:../servo.c    **** {
  26              		.loc 1 14 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 14, -4
  34              		.cfi_offset 7, -8
  35 0002 88B0     		sub	sp, sp, #32
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 40
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  15:../servo.c    **** 	RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO | RCC_APB2Periph_GPIOB, ENABLE);
  41              		.loc 1 15 0
  42 0006 4FF00900 		mov	r0, #9
  43 000a 4FF00101 		mov	r1, #1
  44 000e FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
  16:../servo.c    **** 	GPIO_InitTypeDef initStruct;
  17:../servo.c    **** 	GPIO_StructInit(&initStruct);
  45              		.loc 1 17 0
  46 0012 07F11C03 		add	r3, r7, #28
  47 0016 1846     		mov	r0, r3
  48 0018 FFF7FEFF 		bl	GPIO_StructInit
  18:../servo.c    **** 
  19:../servo.c    **** 	initStruct.GPIO_Pin = GPIO_Pin_6 | GPIO_Pin_7 | GPIO_Pin_8;
  49              		.loc 1 19 0
  50 001c 4FF4E073 		mov	r3, #448
  51 0020 BB83     		strh	r3, [r7, #28]	@ movhi
  20:../servo.c    **** 	initStruct.GPIO_Speed = GPIO_Speed_50MHz;
  52              		.loc 1 20 0
  53 0022 4FF00303 		mov	r3, #3
  54 0026 BB77     		strb	r3, [r7, #30]
  21:../servo.c    **** 	initStruct.GPIO_Mode = GPIO_Mode_AF_PP;
  55              		.loc 1 21 0
  56 0028 4FF01803 		mov	r3, #24
  57 002c FB77     		strb	r3, [r7, #31]
  22:../servo.c    **** 	GPIO_Init(GPIOB, &initStruct);
  58              		.loc 1 22 0
  59 002e 07F11C03 		add	r3, r7, #28
  60 0032 4FF44060 		mov	r0, #3072
  61 0036 C4F20100 		movt	r0, 16385
  62 003a 1946     		mov	r1, r3
  63 003c FFF7FEFF 		bl	GPIO_Init
  23:../servo.c    **** 
  24:../servo.c    **** 	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4, ENABLE);
  64              		.loc 1 24 0
  65 0040 4FF00400 		mov	r0, #4
  66 0044 4FF00101 		mov	r1, #1
  67 0048 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
  25:../servo.c    **** 
  26:../servo.c    **** 	TIM_TimeBaseInitTypeDef timInit;
  27:../servo.c    **** 	TIM_TimeBaseStructInit(&timInit);
  68              		.loc 1 27 0
  69 004c 07F11003 		add	r3, r7, #16
  70 0050 1846     		mov	r0, r3
  71 0052 FFF7FEFF 		bl	TIM_TimeBaseStructInit
  28:../servo.c    **** 
  29:../servo.c    **** 	timInit.TIM_Prescaler = 11;
  72              		.loc 1 29 0
  73 0056 4FF00B03 		mov	r3, #11
  74 005a 3B82     		strh	r3, [r7, #16]	@ movhi
  30:../servo.c    **** 	timInit.TIM_CounterMode = TIM_CounterMode_Up;
  75              		.loc 1 30 0
  76 005c 4FF00003 		mov	r3, #0
  77 0060 7B82     		strh	r3, [r7, #18]	@ movhi
  31:../servo.c    **** 	timInit.TIM_Period = 39999;
  78              		.loc 1 31 0
  79 0062 49F63F43 		movw	r3, #39999
  80 0066 BB82     		strh	r3, [r7, #20]	@ movhi
  32:../servo.c    **** 	timInit.TIM_ClockDivision = TIM_CKD_DIV1;
  81              		.loc 1 32 0
  82 0068 4FF00003 		mov	r3, #0
  83 006c FB82     		strh	r3, [r7, #22]	@ movhi
  33:../servo.c    **** 	timInit.TIM_RepetitionCounter = 0;
  84              		.loc 1 33 0
  85 006e 4FF00003 		mov	r3, #0
  86 0072 3B76     		strb	r3, [r7, #24]
  34:../servo.c    **** 
  35:../servo.c    **** 	TIM_TimeBaseInit(TIM4, &timInit);
  87              		.loc 1 35 0
  88 0074 07F11003 		add	r3, r7, #16
  89 0078 4FF40060 		mov	r0, #2048
  90 007c C4F20000 		movt	r0, 16384
  91 0080 1946     		mov	r1, r3
  92 0082 FFF7FEFF 		bl	TIM_TimeBaseInit
  36:../servo.c    **** 
  37:../servo.c    **** 	TIM_OCInitTypeDef oc_init;
  38:../servo.c    **** 	TIM_OCStructInit(&oc_init);
  93              		.loc 1 38 0
  94 0086 3B46     		mov	r3, r7
  95 0088 1846     		mov	r0, r3
  96 008a FFF7FEFF 		bl	TIM_OCStructInit
  39:../servo.c    **** 
  40:../servo.c    **** 	oc_init.TIM_OCMode = TIM_OCMode_PWM2;
  97              		.loc 1 40 0
  98 008e 4FF07003 		mov	r3, #112
  99 0092 3B80     		strh	r3, [r7, #0]	@ movhi
  41:../servo.c    **** 	oc_init.TIM_OutputState = TIM_OutputState_Enable;
 100              		.loc 1 41 0
 101 0094 4FF00103 		mov	r3, #1
 102 0098 7B80     		strh	r3, [r7, #2]	@ movhi
  42:../servo.c    **** 	oc_init.TIM_OCPolarity = TIM_OCPolarity_Low;
 103              		.loc 1 42 0
 104 009a 4FF00203 		mov	r3, #2
 105 009e 3B81     		strh	r3, [r7, #8]	@ movhi
  43:../servo.c    **** 	oc_init.TIM_OCNPolarity = TIM_OCPolarity_High;
 106              		.loc 1 43 0
 107 00a0 4FF00003 		mov	r3, #0
 108 00a4 7B81     		strh	r3, [r7, #10]	@ movhi
  44:../servo.c    **** 	oc_init.TIM_Pulse = 0;
 109              		.loc 1 44 0
 110 00a6 4FF00003 		mov	r3, #0
 111 00aa FB80     		strh	r3, [r7, #6]	@ movhi
  45:../servo.c    **** 
  46:../servo.c    **** 	TIM_OC1Init(TIM4, &oc_init);
 112              		.loc 1 46 0
 113 00ac 3B46     		mov	r3, r7
 114 00ae 4FF40060 		mov	r0, #2048
 115 00b2 C4F20000 		movt	r0, 16384
 116 00b6 1946     		mov	r1, r3
 117 00b8 FFF7FEFF 		bl	TIM_OC1Init
  47:../servo.c    **** 	TIM_OC2Init(TIM4, &oc_init);
 118              		.loc 1 47 0
 119 00bc 3B46     		mov	r3, r7
 120 00be 4FF40060 		mov	r0, #2048
 121 00c2 C4F20000 		movt	r0, 16384
 122 00c6 1946     		mov	r1, r3
 123 00c8 FFF7FEFF 		bl	TIM_OC2Init
  48:../servo.c    **** 	TIM_OC3Init(TIM4, &oc_init);
 124              		.loc 1 48 0
 125 00cc 3B46     		mov	r3, r7
 126 00ce 4FF40060 		mov	r0, #2048
 127 00d2 C4F20000 		movt	r0, 16384
 128 00d6 1946     		mov	r1, r3
 129 00d8 FFF7FEFF 		bl	TIM_OC3Init
  49:../servo.c    **** 	TIM_OC4Init(TIM4, &oc_init);
 130              		.loc 1 49 0
 131 00dc 3B46     		mov	r3, r7
 132 00de 4FF40060 		mov	r0, #2048
 133 00e2 C4F20000 		movt	r0, 16384
 134 00e6 1946     		mov	r1, r3
 135 00e8 FFF7FEFF 		bl	TIM_OC4Init
  50:../servo.c    **** 
  51:../servo.c    **** 
  52:../servo.c    **** 	TIM_OC1PreloadConfig(TIM4, TIM_OCPreload_Enable);
 136              		.loc 1 52 0
 137 00ec 4FF40060 		mov	r0, #2048
 138 00f0 C4F20000 		movt	r0, 16384
 139 00f4 4FF00801 		mov	r1, #8
 140 00f8 FFF7FEFF 		bl	TIM_OC1PreloadConfig
  53:../servo.c    **** 	TIM_OC2PreloadConfig(TIM4, TIM_OCPreload_Enable);
 141              		.loc 1 53 0
 142 00fc 4FF40060 		mov	r0, #2048
 143 0100 C4F20000 		movt	r0, 16384
 144 0104 4FF00801 		mov	r1, #8
 145 0108 FFF7FEFF 		bl	TIM_OC2PreloadConfig
  54:../servo.c    **** 	TIM_OC3PreloadConfig(TIM4, TIM_OCPreload_Enable);
 146              		.loc 1 54 0
 147 010c 4FF40060 		mov	r0, #2048
 148 0110 C4F20000 		movt	r0, 16384
 149 0114 4FF00801 		mov	r1, #8
 150 0118 FFF7FEFF 		bl	TIM_OC3PreloadConfig
  55:../servo.c    **** 	TIM_OC4PreloadConfig(TIM4, TIM_OCPreload_Enable);
 151              		.loc 1 55 0
 152 011c 4FF40060 		mov	r0, #2048
 153 0120 C4F20000 		movt	r0, 16384
 154 0124 4FF00801 		mov	r1, #8
 155 0128 FFF7FEFF 		bl	TIM_OC4PreloadConfig
  56:../servo.c    **** 
  57:../servo.c    **** 
  58:../servo.c    **** 	TIM_Cmd(TIM4, ENABLE);
 156              		.loc 1 58 0
 157 012c 4FF40060 		mov	r0, #2048
 158 0130 C4F20000 		movt	r0, 16384
 159 0134 4FF00101 		mov	r1, #1
 160 0138 FFF7FEFF 		bl	TIM_Cmd
  59:../servo.c    **** }
 161              		.loc 1 59 0
 162 013c 07F12007 		add	r7, r7, #32
 163 0140 BD46     		mov	sp, r7
 164 0142 80BD     		pop	{r7, pc}
 165              		.cfi_endproc
 166              	.LFE29:
 168              		.align	2
 169              		.global	servo_setAngle
 170              		.thumb
 171              		.thumb_func
 173              	servo_setAngle:
 174              	.LFB30:
  60:../servo.c    **** 
  61:../servo.c    **** void servo_setAngle(enum Servos servo, int value)
  62:../servo.c    **** {
 175              		.loc 1 62 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 16
 178              		@ frame_needed = 1, uses_anonymous_args = 0
 179 0144 80B5     		push	{r7, lr}
 180              	.LCFI3:
 181              		.cfi_def_cfa_offset 8
 182              		.cfi_offset 14, -4
 183              		.cfi_offset 7, -8
 184 0146 84B0     		sub	sp, sp, #16
 185              	.LCFI4:
 186              		.cfi_def_cfa_offset 24
 187 0148 00AF     		add	r7, sp, #0
 188              	.LCFI5:
 189              		.cfi_def_cfa_register 7
 190 014a 0346     		mov	r3, r0
 191 014c 3960     		str	r1, [r7, #0]
 192 014e FB71     		strb	r3, [r7, #7]
  63:../servo.c    **** 	//1,3 ms <-> 1,7 ms
  64:../servo.c    **** 
  65:../servo.c    **** 	assert_param(value >= -1000);
  66:../servo.c    **** 	assert_param(value <= 1000);
  67:../servo.c    **** 
  68:../servo.c    **** 	int valueIntern = 3000 + value * 4 / 10;
 193              		.loc 1 68 0
 194 0150 3B68     		ldr	r3, [r7, #0]
 195 0152 4FEA8302 		lsl	r2, r3, #2
 196 0156 46F26763 		movw	r3, #26215
 197 015a C6F26663 		movt	r3, 26214
 198 015e 83FB0213 		smull	r1, r3, r3, r2
 199 0162 4FEAA301 		asr	r1, r3, #2
 200 0166 4FEAE273 		asr	r3, r2, #31
 201 016a CB1A     		subs	r3, r1, r3
 202 016c 03F53A63 		add	r3, r3, #2976
 203 0170 03F11803 		add	r3, r3, #24
 204 0174 FB60     		str	r3, [r7, #12]
  69:../servo.c    **** 
  70:../servo.c    **** 	switch (servo)
 205              		.loc 1 70 0
 206 0176 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 207 0178 012B     		cmp	r3, #1
 208 017a 0DD0     		beq	.L5
 209 017c 022B     		cmp	r3, #2
 210 017e 15D0     		beq	.L6
 211 0180 002B     		cmp	r3, #0
 212 0182 1DD1     		bne	.L2
 213              	.L4:
  71:../servo.c    **** 	{
  72:../servo.c    **** 	case Servo_1:
  73:../servo.c    **** 		TIM_SetCompare1(TIM4, valueIntern);
 214              		.loc 1 73 0
 215 0184 FB68     		ldr	r3, [r7, #12]
 216 0186 9BB2     		uxth	r3, r3
 217 0188 4FF40060 		mov	r0, #2048
 218 018c C4F20000 		movt	r0, 16384
 219 0190 1946     		mov	r1, r3
 220 0192 FFF7FEFF 		bl	TIM_SetCompare1
  74:../servo.c    **** 		break;
 221              		.loc 1 74 0
 222 0196 13E0     		b	.L2
 223              	.L5:
  75:../servo.c    **** 	case Servo_2:
  76:../servo.c    **** 		TIM_SetCompare2(TIM4, valueIntern);
 224              		.loc 1 76 0
 225 0198 FB68     		ldr	r3, [r7, #12]
 226 019a 9BB2     		uxth	r3, r3
 227 019c 4FF40060 		mov	r0, #2048
 228 01a0 C4F20000 		movt	r0, 16384
 229 01a4 1946     		mov	r1, r3
 230 01a6 FFF7FEFF 		bl	TIM_SetCompare2
  77:../servo.c    **** 		break;
 231              		.loc 1 77 0
 232 01aa 09E0     		b	.L2
 233              	.L6:
  78:../servo.c    **** 	case Servo_3:
  79:../servo.c    **** 		TIM_SetCompare3(TIM4, valueIntern);
 234              		.loc 1 79 0
 235 01ac FB68     		ldr	r3, [r7, #12]
 236 01ae 9BB2     		uxth	r3, r3
 237 01b0 4FF40060 		mov	r0, #2048
 238 01b4 C4F20000 		movt	r0, 16384
 239 01b8 1946     		mov	r1, r3
 240 01ba FFF7FEFF 		bl	TIM_SetCompare3
  80:../servo.c    **** 		break;
 241              		.loc 1 80 0
 242 01be 00BF     		nop
 243              	.L2:
  81:../servo.c    **** 	}
  82:../servo.c    **** }
 244              		.loc 1 82 0
 245 01c0 07F11007 		add	r7, r7, #16
 246 01c4 BD46     		mov	sp, r7
 247 01c6 80BD     		pop	{r7, pc}
 248              		.cfi_endproc
 249              	.LFE30:
 251              	.Letext0:
 252              		.file 2 "/opt/CodeSourcery/arm-2011.09/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eab
 253              		.file 3 "/home/simon/Workspace/stm32vl/stm32_lib/inc/stm32f10x.h"
 254              		.file 4 "/home/simon/Workspace/stm32vl/stm32_lib/inc/stm32f10x_gpio.h"
 255              		.file 5 "/home/simon/Workspace/stm32vl/stm32_lib/inc/stm32f10x_tim.h"
 256              		.file 6 "/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h"
 257              		.file 7 "../servo.h"
DEFINED SYMBOLS
                            *ABS*:00000000 servo.c
     /tmp/ccWv7NUA.s:18     .text:00000000 $t
     /tmp/ccWv7NUA.s:23     .text:00000000 servo_init
     /tmp/ccWv7NUA.s:173    .text:00000144 servo_setAngle
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphClockCmd
GPIO_StructInit
GPIO_Init
RCC_APB1PeriphClockCmd
TIM_TimeBaseStructInit
TIM_TimeBaseInit
TIM_OCStructInit
TIM_OC1Init
TIM_OC2Init
TIM_OC3Init
TIM_OC4Init
TIM_OC1PreloadConfig
TIM_OC2PreloadConfig
TIM_OC3PreloadConfig
TIM_OC4PreloadConfig
TIM_Cmd
TIM_SetCompare1
TIM_SetCompare2
TIM_SetCompare3
