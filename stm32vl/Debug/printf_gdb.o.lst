   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"printf_gdb.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.thumb
  20              		.thumb_func
  22              	ITM_SendChar:
  23              	.LFB26:
  24              		.file 1 "/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h"
   1:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**************************************************************************//**
   2:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @file     core_cm3.h
   3:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @version  V1.30
   5:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @date     30. October 2009
   6:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
   7:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @note
   8:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
  10:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @par
  11:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * within development tools that are supporting such ARM based processors. 
  14:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
  15:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @par
  16:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
  22:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  ******************************************************************************/
  23:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
  24:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define __CM3_CORE_H__
  26:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
  27:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
  29:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *   - Error 10: \n
  31:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *     Error 10: Expecting ';'
  33:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * .
  34:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *   - Error 530: \n
  35:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *     return(__regBasePri); \n
  36:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * . 
  38:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *   - Error 550: \n
  39:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * .
  42:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *   - Error 754: \n
  43:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * .
  46:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *   - Error 750: \n
  47:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * .
  50:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *   - Error 528: \n
  51:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * .
  54:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *   - Error 751: \n
  55:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *     } InterruptType_Type; \n
  56:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * .
  58:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
  60:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
  61:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
  62:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /*lint -save */
  63:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /*lint -e10  */
  64:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /*lint -e530 */
  65:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /*lint -e550 */
  66:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /*lint -e754 */
  67:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /*lint -e750 */
  68:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /*lint -e528 */
  69:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /*lint -e751 */
  70:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
  71:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
  72:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****     - CMSIS version number
  75:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****     - Cortex-M core peripheral base address
  77:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   @{
  78:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
  79:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
  80:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #ifdef __cplusplus
  81:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  extern "C" {
  82:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #endif 
  83:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
  84:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
  88:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
  90:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
  92:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #if defined (__ICCARM__)
  93:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #endif
  95:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
  96:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
  97:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #endif
 100:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 101:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 102:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 103:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 104:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
 105:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * IO definitions
 106:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 107:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * define access restrictions to peripheral registers
 108:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
 109:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 110:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #ifdef __cplusplus
 111:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #else
 113:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #endif
 115:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 118:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 119:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 120:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /*******************************************************************************
 121:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *                 Register Abstraction
 122:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  ******************************************************************************/
 123:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  @{
 125:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** */
 126:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 127:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 128:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   @{
 131:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
 132:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** typedef struct
 133:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** {
 134:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****        uint32_t RESERVED0[24];                                   
 136:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****        uint32_t RSERVED1[24];                                    
 138:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****        uint32_t RESERVED2[24];                                   
 140:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****        uint32_t RESERVED3[24];                                   
 142:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****        uint32_t RESERVED4[56];                                   
 144:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****        uint32_t RESERVED5[644];                                  
 146:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
 147:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** }  NVIC_Type;                                               
 148:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 150:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 151:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   @{
 154:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
 155:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** typedef struct
 156:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** {
 157:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** } SCB_Type;                                                
 177:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 178:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 182:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 185:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 188:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 191:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 195:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 198:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 201:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 204:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 207:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 210:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 213:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 216:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 219:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 222:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1FFul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB 
 225:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 226:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 229:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 233:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 236:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 239:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 242:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 245:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 248:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 251:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* SCB System Control Register Definitions */
 252:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 255:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 258:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 261:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 265:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 268:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 271:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 274:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 277:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 280:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 284:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 287:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 290:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 293:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 296:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 299:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 302:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 305:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 308:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 311:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****                                      
 314:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 317:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 318:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 320:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 323:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 327:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 330:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 333:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 337:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 340:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 343:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 347:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 350:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 353:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 356:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 360:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 361:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   memory mapped structure for SysTick
 363:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   @{
 364:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
 365:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** typedef struct
 366:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** {
 367:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** } SysTick_Type;
 372:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 373:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 375:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 377:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 380:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 383:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 386:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 390:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* SysTick Current Register Definitions */
 391:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 394:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 398:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 401:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 405:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 406:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   @{
 409:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
 410:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** typedef struct
 411:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** {
 412:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __O  union  
 413:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   {
 414:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****        uint32_t RESERVED0[864];                                 
 419:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****        uint32_t RESERVED1[15];                                  
 421:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****        uint32_t RESERVED2[15];                                  
 423:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****        uint32_t RESERVED3[29];                                  
 425:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****        uint32_t RESERVED4[43];                                  
 429:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****        uint32_t RESERVED5[6];                                   
 432:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** } ITM_Type;                                                
 445:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 446:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 450:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 454:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 457:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 460:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 463:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 466:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 469:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 472:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 475:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 479:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 483:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 487:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 489:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 491:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 494:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 498:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 499:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   @{
 502:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
 503:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** typedef struct
 504:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** {
 505:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****        uint32_t RESERVED0;
 506:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #else
 510:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****        uint32_t RESERVED1;
 511:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #endif
 512:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** } InterruptType_Type;
 513:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 514:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 518:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 522:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 525:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 529:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 530:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   @{
 534:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
 535:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** typedef struct
 536:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** {
 537:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
 546:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** } MPU_Type;                                                
 549:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 550:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* MPU Type Register */
 551:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 554:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 557:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 560:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* MPU Control Register */
 561:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 564:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 567:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 570:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* MPU Region Number Register */
 571:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 574:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* MPU Region Base Address Register */
 575:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 578:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 581:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 584:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 588:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 591:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 594:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 597:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 600:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 603:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 606:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 609:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 612:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #endif
 614:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 615:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 616:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   @{
 619:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
 620:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** typedef struct
 621:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** {
 622:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** } CoreDebug_Type;
 627:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 628:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 632:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 635:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 638:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 641:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 644:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 647:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 650:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 653:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 656:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 659:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 660:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 662:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 665:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* Debug Core Register Selector Register */
 666:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 669:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 672:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 676:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 679:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 682:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 685:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 688:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 691:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 694:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 697:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 700:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 703:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 706:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 709:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 713:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 714:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
 717:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 722:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 729:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #endif
 733:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 734:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 736:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 737:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /*******************************************************************************
 738:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *                Hardware Abstraction Layer
 739:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  ******************************************************************************/
 740:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 741:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #if defined ( __CC_ARM   )
 742:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 745:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 749:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 753:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 757:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #endif
 758:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 759:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 760:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 762:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* ARM armcc specific functions */
 764:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 765:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 768:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define __NOP                             __nop
 769:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define __WFI                             __wfi
 770:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define __WFE                             __wfe
 771:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define __SEV                             __sev
 772:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define __ISB()                           __isb(0)
 773:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define __DSB()                           __dsb(0)
 774:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define __DMB()                           __dmb(0)
 775:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define __REV                             __rev
 776:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define __RBIT                            __rbit
 777:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 784:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 785:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 790:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 791:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
 792:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 794:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return ProcessStackPointer
 795:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 796:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Return the actual process stack pointer
 797:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
 798:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 800:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
 801:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 803:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 805:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
 806:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
 808:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 810:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
 811:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 813:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return Main Stack Pointer
 814:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 815:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Cortex processor register
 817:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
 818:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 820:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
 821:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 823:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 825:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
 826:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
 828:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 830:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
 831:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 833:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param   value  value to reverse
 834:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return         reversed value
 835:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 836:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
 838:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 840:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
 841:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 843:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param   value  value to reverse
 844:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return         reversed value
 845:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 846:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
 848:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 850:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 851:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 853:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
 854:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 856:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
 858:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern void __CLREX(void);
 859:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 860:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
 861:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Return the Base Priority value
 862:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 863:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return BasePriority
 864:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 865:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Return the content of the base priority register
 866:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
 867:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 869:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
 870:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Set the Base Priority value
 871:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 872:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  basePri  BasePriority
 873:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 874:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Set the base priority register
 875:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
 876:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 878:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
 879:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 881:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return PriMask
 882:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 883:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
 885:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 887:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
 888:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Set the Priority Mask value
 889:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 890:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param   priMask  PriMask
 891:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 892:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
 894:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 896:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
 897:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 899:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return FaultMask
 900:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 901:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Return the content of the fault mask register
 902:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
 903:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 905:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
 906:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 908:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  faultMask faultMask value
 909:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 910:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Set the fault mask register
 911:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
 912:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 914:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
 915:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Return the Control Register value
 916:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * 
 917:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return Control value
 918:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 919:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Return the content of the control register
 920:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
 921:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 923:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
 924:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Set the Control Register value
 925:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 926:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  control  Control value
 927:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 928:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Set the control register
 929:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
 930:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 932:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 934:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
 935:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 937:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
 939:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define __CLREX                           __clrex
 940:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 941:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
 942:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Return the Base Priority value
 943:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 944:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return BasePriority
 945:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 946:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Return the content of the base priority register
 947:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
 948:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** {
 950:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   return(__regBasePri);
 952:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** }
 953:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 954:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
 955:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Set the Base Priority value
 956:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 957:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  basePri  BasePriority
 958:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 959:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Set the base priority register
 960:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
 961:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** {
 963:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** }
 966:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 967:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
 968:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 970:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return PriMask
 971:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 972:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
 974:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** {
 976:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   return(__regPriMask);
 978:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** }
 979:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 980:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
 981:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 983:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  priMask  PriMask
 984:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 985:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
 987:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** {
 989:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __regPriMask = (priMask);
 991:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** }
 992:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
 993:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
 994:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 996:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return FaultMask
 997:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
 998:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Return the content of the fault mask register
 999:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1000:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** {
1002:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   return(__regFaultMask);
1004:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** }
1005:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1006:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1007:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1009:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  faultMask  faultMask value
1010:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1011:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Set the fault mask register
1012:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1013:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** {
1015:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** }
1018:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1019:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1020:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Return the Control Register value
1021:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * 
1022:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return Control value
1023:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1024:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Return the content of the control register
1025:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1026:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** {
1028:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   return(__regControl);
1030:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** }
1031:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1032:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1033:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Set the Control Register value
1034:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1035:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  control  Control value
1036:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1037:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Set the control register
1038:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1039:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** {
1041:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __regControl = control;
1043:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** }
1044:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1045:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #endif /* __ARMCC_VERSION  */ 
1046:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1047:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1048:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1049:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* IAR iccarm specific functions */
1051:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1052:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1055:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM ("cpsie f"); }
1056:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM ("cpsid f"); }
1057:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1058:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
1059:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE  void __WFI()                     { __ASM ("wfi"); }
1060:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE  void __WFE()                     { __ASM ("wfe"); }
1061:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE  void __SEV()                     { __ASM ("sev"); }
1062:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE  void __CLREX()                   { __ASM ("clrex"); }
1063:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1064:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1076:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1077:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1078:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1080:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return ProcessStackPointer
1081:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1082:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Return the actual process stack pointer
1083:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1084:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1086:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1087:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1089:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1091:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1092:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1094:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1096:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1097:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1099:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return Main Stack Pointer
1100:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1101:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Cortex processor register
1103:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1104:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1106:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1107:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1109:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1111:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1112:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1114:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1116:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1117:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1119:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  value  value to reverse
1120:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return        reversed value
1121:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1122:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Reverse byte order in unsigned short value
1123:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1124:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1126:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1127:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Reverse bit order of value
1128:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1129:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  value  value to reverse
1130:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return        reversed value
1131:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1132:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Reverse bit order of value
1133:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1134:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1136:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1137:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1139:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  *addr  address pointer
1140:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return        value of (*address)
1141:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1142:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1144:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1146:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1147:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1149:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  *addr  address pointer
1150:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return        value of (*address)
1151:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1152:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1154:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1156:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1157:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1159:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  *addr  address pointer
1160:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return        value of (*address)
1161:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1162:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1164:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1166:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1167:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1169:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  value  value to store
1170:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  *addr  address pointer
1171:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return        successful / failed
1172:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1173:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1175:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1177:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1178:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1180:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  value  value to store
1181:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  *addr  address pointer
1182:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return        successful / failed
1183:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1184:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1186:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1188:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1189:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1191:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  value  value to store
1192:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  *addr  address pointer
1193:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return        successful / failed
1194:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1195:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1197:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1199:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1200:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1201:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* GNU gcc specific functions */
1203:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1204:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
1205:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
1206:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1207:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
1208:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM volatile ("cpsid f"); }
1209:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1210:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE void __NOP()                      { __ASM volatile ("nop"); }
1211:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE void __WFI()                      { __ASM volatile ("wfi"); }
1212:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE void __WFE()                      { __ASM volatile ("wfe"); }
1213:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE void __SEV()                      { __ASM volatile ("sev"); }
1214:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE void __ISB()                      { __ASM volatile ("isb"); }
1215:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE void __DSB()                      { __ASM volatile ("dsb"); }
1216:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE void __DMB()                      { __ASM volatile ("dmb"); }
1217:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE void __CLREX()                    { __ASM volatile ("clrex"); }
1218:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1219:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1220:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1221:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1222:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1223:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return ProcessStackPointer
1224:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1225:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Return the actual process stack pointer
1226:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1227:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern uint32_t __get_PSP(void);
1228:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1229:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1230:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1231:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1232:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1233:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1234:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1235:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * (process stack pointer) Cortex processor register
1236:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1237:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1238:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1239:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1240:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1241:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1242:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return Main Stack Pointer
1243:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1244:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1245:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Cortex processor register
1246:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1247:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern uint32_t __get_MSP(void);
1248:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1249:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1250:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1251:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1252:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1253:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1254:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1255:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * (main stack pointer) Cortex processor register
1256:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1257:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1258:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1259:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1260:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Return the Base Priority value
1261:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1262:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return BasePriority
1263:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1264:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Return the content of the base priority register
1265:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1266:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
1267:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1268:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1269:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Set the Base Priority value
1270:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1271:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  basePri  BasePriority
1272:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1273:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Set the base priority register
1274:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1275:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
1276:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1277:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1278:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Return the Priority Mask value
1279:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1280:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return PriMask
1281:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1282:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
1283:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1284:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern uint32_t  __get_PRIMASK(void);
1285:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1286:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1287:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Set the Priority Mask value
1288:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1289:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  priMask  PriMask
1290:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1291:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Set the priority mask bit in the priority mask register
1292:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1293:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
1294:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1295:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1296:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Return the Fault Mask value
1297:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1298:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return FaultMask
1299:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1300:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Return the content of the fault mask register
1301:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1302:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
1303:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1304:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1305:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Set the Fault Mask value
1306:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1307:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  faultMask  faultMask value
1308:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1309:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Set the fault mask register
1310:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1311:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
1312:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1313:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1314:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Return the Control Register value
1315:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** * 
1316:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** *  @return Control value
1317:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1318:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Return the content of the control register
1319:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1320:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern uint32_t __get_CONTROL(void);
1321:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1322:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1323:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Set the Control Register value
1324:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1325:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  control  Control value
1326:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1327:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Set the control register
1328:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1329:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
1330:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1331:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1332:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Reverse byte order in integer value
1333:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1334:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  value  value to reverse
1335:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return        reversed value
1336:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1337:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Reverse byte order in integer value
1338:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1339:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern uint32_t __REV(uint32_t value);
1340:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1341:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1342:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1343:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1344:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  value  value to reverse
1345:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return        reversed value
1346:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1347:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Reverse byte order in unsigned short value
1348:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1349:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1350:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1351:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1352:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
1353:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1354:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  value  value to reverse
1355:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return        reversed value
1356:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1357:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
1358:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1359:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern int32_t __REVSH(int16_t value);
1360:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1361:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1362:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Reverse bit order of value
1363:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1364:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  value  value to reverse
1365:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return        reversed value
1366:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1367:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Reverse bit order of value
1368:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1369:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1370:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1371:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1372:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1373:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1374:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  *addr  address pointer
1375:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return        value of (*address)
1376:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1377:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Exclusive LDR command for 8 bit value
1378:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1379:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1380:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1381:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1382:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1383:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1384:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  *addr  address pointer
1385:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return        value of (*address)
1386:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1387:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1388:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1389:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1390:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1391:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1392:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1393:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1394:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  *addr  address pointer
1395:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return        value of (*address)
1396:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1397:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1398:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1399:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1400:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1401:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1402:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1403:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1404:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  value  value to store
1405:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  *addr  address pointer
1406:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return        successful / failed
1407:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1408:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Exclusive STR command for 8 bit values
1409:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1410:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1411:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1412:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1413:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1414:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1415:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  value  value to store
1416:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  *addr  address pointer
1417:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return        successful / failed
1418:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1419:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Exclusive STR command for 16 bit values
1420:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1421:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1422:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1423:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1424:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1425:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1426:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  value  value to store
1427:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  *addr  address pointer
1428:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return        successful / failed
1429:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1430:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Exclusive STR command for 32 bit values
1431:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1432:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1433:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1434:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1435:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #elif (defined (__TASKING__)) /*------------------ TASKING Compiler ---------------------*/
1436:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* TASKING carm specific functions */
1437:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1438:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /*
1439:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * The CMSIS functions have been implemented as intrinsics in the compiler.
1440:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Please use "carm -?i" to get an up to date list of all instrinsics,
1441:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Including the CMSIS ones.
1442:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1443:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1444:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #endif
1445:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1446:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1447:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /** @addtogroup CMSIS_CM3_Core_FunctionInterface CMSIS CM3 Core Function Interface
1448:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   Core  Function Interface containing:
1449:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   - Core NVIC Functions
1450:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   - Core SysTick Functions
1451:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   - Core Reset Functions
1452:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** */
1453:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /*@{*/
1454:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1455:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1456:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1457:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1458:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Set the Priority Grouping in NVIC Interrupt Controller
1459:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *#include "stm32f10x.h"
1460:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1461:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  PriorityGroup is priority grouping field
1462:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1463:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Set the priority grouping field using the required unlock sequence.
1464:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * The parameter priority_grouping is assigned to the field 
1465:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * SCB->AIRCR [10:8] PRIGROUP field. Only values from 0..7 are used.
1466:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * In case of a conflict between priority grouping and available
1467:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1468:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1469:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1470:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** {
1471:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   uint32_t reg_value;
1472:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);                         /* only values 0..7 a
1473:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   
1474:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1475:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1476:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   reg_value  =  (reg_value                       |
1477:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****                 (0x5FA << SCB_AIRCR_VECTKEY_Pos) | 
1478:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1479:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   SCB->AIRCR =  reg_value;
1480:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** }
1481:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1482:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1483:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Get the Priority Grouping from NVIC Interrupt Controller
1484:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1485:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return priority grouping field 
1486:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1487:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Get the priority grouping from NVIC Interrupt Controller.
1488:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1489:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1490:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1491:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** {
1492:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1493:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** }
1494:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1495:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1496:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Enable Interrupt in NVIC Interrupt Controller
1497:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1498:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to enable
1499:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1500:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Enable a device specific interupt in the NVIC interrupt controller.
1501:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * The interrupt number cannot be a negative value.
1502:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1503:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #include "stm32f10x.h"
1504:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1505:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1506:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1507:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** {
1508:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
1509:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** }
1510:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1511:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1512:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Disable the interrupt line for external interrupt specified
1513:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * 
1514:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to disable
1515:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * 
1516:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Disable a device specific interupt in the NVIC interrupt controller.
1517:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * The interrupt number cannot be a negative value.
1518:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1519:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1520:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** {
1521:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
1522:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** }
1523:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1524:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1525:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Read the interrupt pending bit for a device specific interrupt source
1526:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * 
1527:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  IRQn    The number of the device specifc interrupt
1528:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return         1 = interrupt pending, 0 = interrupt not pending
1529:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1530:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Read the pending register in NVIC and return 1 if its status is pending, 
1531:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * otherwise it returns 0
1532:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1533:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1534:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** {
1535:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   return((uint32_t) ((NVIC->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); 
1536:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** }
1537:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1538:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1539:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Set the pending bit for an external interrupt
1540:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * 
1541:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  IRQn    The number of the interrupt for set pending
1542:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1543:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Set the pending bit for the specified interrupt.
1544:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * The interrupt number cannot be a negative value.
1545:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1546:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1547:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** {
1548:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   NVIC->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pending 
1549:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** }
1550:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1551:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1552:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Clear the pending bit for an external interrupt
1553:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1554:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  IRQn    The number of the interrupt for clear pending
1555:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1556:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Clear the pending bit for the specified interrupt. 
1557:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * The interrupt number cannot be a negative value.
1558:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1559:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1560:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** {
1561:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrup
1562:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** }
1563:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1564:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1565:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Read the active bit for an external interrupt
1566:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1567:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  IRQn    The number of the interrupt for read active bit
1568:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return         1 = interrupt active, 0 = interrupt not active
1569:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1570:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Read the active register in NVIC and returns 1 if its status is active, 
1571:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * otherwise it returns 0.
1572:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1573:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1574:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** {
1575:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   return((uint32_t)((NVIC->IABR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); /
1576:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** }
1577:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1578:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1579:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Set the priority for an interrupt
1580:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1581:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  IRQn      The number of the interrupt for set priority
1582:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  priority  The priority to set
1583:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1584:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Set the priority for the specified interrupt. The interrupt 
1585:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * number can be positive to specify an external (device specific) 
1586:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * interrupt, or negative to specify an internal (core) interrupt.
1587:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1588:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Note: The priority cannot be set for every core interrupt.
1589:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1590:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1591:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** {
1592:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   if(IRQn < 0) {
1593:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set 
1594:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   else {
1595:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****     NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set 
1596:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** }
1597:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1598:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1599:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Read the priority for an interrupt
1600:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1601:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  IRQn      The number of the interrupt for get priority
1602:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return           The priority for the interrupt
1603:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1604:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Read the priority for the specified interrupt. The interrupt 
1605:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * number can be positive to specify an external (device specific) 
1606:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * interrupt, or negative to specify an internal (core) interrupt.
1607:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1608:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * The returned priority value is automatically aligned to the implemented
1609:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * priority bits of the microcontroller.
1610:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1611:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Note: The priority cannot be set for every core interrupt.
1612:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1613:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1614:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** {
1615:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1616:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   if(IRQn < 0) {
1617:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****     return((uint32_t)(SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] >> (8 - __NVIC_PRIO_BITS)));  } /* get p
1618:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   else {
1619:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****     return((uint32_t)(NVIC->IP[(uint32_t)(IRQn)]           >> (8 - __NVIC_PRIO_BITS)));  } /* get p
1620:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** }
1621:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1622:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1623:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1624:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Encode the priority for an interrupt
1625:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1626:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  PriorityGroup    The used priority group
1627:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  PreemptPriority  The preemptive priority value (starting from 0)
1628:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  SubPriority      The sub priority value (starting from 0)
1629:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return                  The encoded priority for the interrupt
1630:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1631:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Encode the priority for an interrupt with the given priority group,
1632:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * preemptive priority value and sub priority value.
1633:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * In case of a conflict between priority grouping and available
1634:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the samllest possible priority group is set.
1635:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1636:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * The returned priority value can be used for NVIC_SetPriority(...) function
1637:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1638:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1639:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** {
1640:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used        
1641:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   uint32_t PreemptPriorityBits;
1642:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   uint32_t SubPriorityBits;
1643:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1644:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Priori
1645:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
1646:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  
1647:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   return (
1648:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****            ((PreemptPriority & ((1 << (PreemptPriorityBits)) - 1)) << SubPriorityBits) |
1649:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****            ((SubPriority     & ((1 << (SubPriorityBits    )) - 1)))
1650:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****          );
1651:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** }
1652:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1653:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1654:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1655:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Decode the priority of an interrupt
1656:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1657:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  Priority           The priority for the interrupt
1658:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  PriorityGroup      The used priority group
1659:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  pPreemptPriority   The preemptive priority value (starting from 0)
1660:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  pSubPriority       The sub priority value (starting from 0)
1661:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1662:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Decode an interrupt priority value with the given priority group to 
1663:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * preemptive priority value and sub priority value.
1664:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * In case of a conflict between priority grouping and available
1665:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the samllest possible priority group is set.
1666:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1667:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * The priority value can be retrieved with NVIC_GetPriority(...) function
1668:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1669:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* pPre
1670:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** {
1671:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used        
1672:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   uint32_t PreemptPriorityBits;
1673:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   uint32_t SubPriorityBits;
1674:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1675:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Priori
1676:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
1677:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   
1678:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & ((1 << (PreemptPriorityBits)) - 1);
1679:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   *pSubPriority     = (Priority                   ) & ((1 << (SubPriorityBits    )) - 1);
1680:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** }
1681:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1682:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1683:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1684:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* ##################################    SysTick function  ########################################
1685:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1686:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #if (!defined (__Vendor_SysTickConfig)) || (__Vendor_SysTickConfig == 0)
1687:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1688:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1689:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Initialize and start the SysTick counter and its interrupt.
1690:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1691:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param   ticks   number of ticks between two interrupts
1692:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return  1 = failed, 0 = successful
1693:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1694:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Initialise the system tick timer and its interrupt and start the
1695:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * system tick timer / counter in free running mode to generate 
1696:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * periodical interrupts.
1697:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1698:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE uint32_t SysTick_Config(uint32_t ticks)
1699:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** { 
1700:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   if (ticks > SysTick_LOAD_RELOAD_Msk)  return (1);            /* Reload value impossible */
1701:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****                                                                
1702:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   SysTick->LOAD  = (ticks & SysTick_LOAD_RELOAD_Msk) - 1;      /* set reload register */
1703:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Cortex-M0 System
1704:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
1705:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk | 
1706:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****                    SysTick_CTRL_TICKINT_Msk   | 
1707:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****                    SysTick_CTRL_ENABLE_Msk;                    /* Enable SysTick IRQ and SysTick Ti
1708:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   return (0);                                                  /* Function successful */
1709:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** }
1710:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1711:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #endif
1712:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1713:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1714:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1715:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1716:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* ##################################    Reset function  ##########################################
1717:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1718:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1719:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Initiate a system reset request.
1720:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1721:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * Initiate a system reset request to reset the MCU
1722:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1723:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE void NVIC_SystemReset(void)
1724:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** {
1725:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   SCB->AIRCR  = ((0x5FA << SCB_AIRCR_VECTKEY_Pos)      | 
1726:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****                  (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) | 
1727:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****                  SCB_AIRCR_SYSRESETREQ_Msk);                   /* Keep priority group unchanged */
1728:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   __DSB();                                                     /* Ensure completion of memory acces
1729:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   while(1);                                                    /* wait until reset */
1730:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** }
1731:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1732:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_Core_FunctionInterface */
1733:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1734:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1735:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1736:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /* ##################################### Debug In/Output function #################################
1737:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1738:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebugInterface CMSIS CM3 Core Debug Interface
1739:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   Core Debug Interface containing:
1740:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   - Core Debug Receive / Transmit Functions
1741:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   - Core Debug Defines
1742:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   - Core Debug Variables
1743:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** */
1744:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /*@{*/
1745:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1746:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** extern volatile int ITM_RxBuffer;                    /*!< variable to receive characters           
1747:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** #define             ITM_RXBUFFER_EMPTY    0x5AA55AA5 /*!< value identifying ITM_RxBuffer is ready f
1748:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1749:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** 
1750:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** /**
1751:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @brief  Outputs a character via the ITM channel 0
1752:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1753:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @param  ch   character to output
1754:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * @return      character to output
1755:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  *
1756:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * The function outputs a character via the ITM channel 0. 
1757:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * The function returns when no debugger is connected that has booked the output.  
1758:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  * It is blocking when a debugger is connected, but the previous character send is not transmitted.
1759:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****  */
1760:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** static __INLINE uint32_t ITM_SendChar (uint32_t ch)
1761:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** {
  25              		.loc 1 1761 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 8
  28              		@ frame_needed = 1, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30 0000 80B4     		push	{r7}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 4
  33              		.cfi_offset 7, -4
  34 0002 83B0     		sub	sp, sp, #12
  35              	.LCFI1:
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              	.LCFI2:
  39              		.cfi_def_cfa_register 7
  40 0006 7860     		str	r0, [r7, #4]
1762:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   if ((CoreDebug->DEMCR & CoreDebug_DEMCR_TRCENA_Msk)  &&      /* Trace enabled */
  41              		.loc 1 1762 0
  42 0008 4EF6F053 		movw	r3, #60912
  43 000c CEF20003 		movt	r3, 57344
  44 0010 DB68     		ldr	r3, [r3, #12]
  45 0012 03F08073 		and	r3, r3, #16777216
  46 0016 002B     		cmp	r3, #0
  47 0018 1CD0     		beq	.L2
1763:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****       (ITM->TCR & ITM_TCR_ITMENA_Msk)                  &&      /* ITM enabled */
  48              		.loc 1 1763 0 discriminator 1
  49 001a 4FF06043 		mov	r3, #-536870912
  50 001e D3F8803E 		ldr	r3, [r3, #3712]
1762:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   if ((CoreDebug->DEMCR & CoreDebug_DEMCR_TRCENA_Msk)  &&      /* Trace enabled */
  51              		.loc 1 1762 0 discriminator 1
  52 0022 03F00103 		and	r3, r3, #1
  53 0026 DBB2     		uxtb	r3, r3
  54 0028 002B     		cmp	r3, #0
  55 002a 13D0     		beq	.L2
1764:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****       (ITM->TER & (1ul << 0)        )                    )     /* ITM Port #0 enabled */
  56              		.loc 1 1764 0
  57 002c 4FF06043 		mov	r3, #-536870912
  58 0030 D3F8003E 		ldr	r3, [r3, #3584]
1763:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****       (ITM->TCR & ITM_TCR_ITMENA_Msk)                  &&      /* ITM enabled */
  59              		.loc 1 1763 0
  60 0034 03F00103 		and	r3, r3, #1
  61 0038 DBB2     		uxtb	r3, r3
  62 003a 002B     		cmp	r3, #0
  63 003c 0AD0     		beq	.L2
1765:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   {
1766:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****     while (ITM->PORT[0].u32 == 0);
  64              		.loc 1 1766 0
  65 003e 00BF     		nop
  66              	.L3:
  67              		.loc 1 1766 0 is_stmt 0 discriminator 1
  68 0040 4FF06043 		mov	r3, #-536870912
  69 0044 1B68     		ldr	r3, [r3, #0]
  70 0046 002B     		cmp	r3, #0
  71 0048 FAD0     		beq	.L3
1767:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****     ITM->PORT[0].u8 = (uint8_t) ch;
  72              		.loc 1 1767 0 is_stmt 1
  73 004a 4FF06043 		mov	r3, #-536870912
  74 004e 7A68     		ldr	r2, [r7, #4]
  75 0050 D2B2     		uxtb	r2, r2
  76 0052 1A70     		strb	r2, [r3, #0]
  77              	.L2:
1768:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   }  
1769:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h ****   return (ch);
  78              		.loc 1 1769 0
  79 0054 7B68     		ldr	r3, [r7, #4]
1770:/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h **** }
  80              		.loc 1 1770 0
  81 0056 1846     		mov	r0, r3
  82 0058 07F10C07 		add	r7, r7, #12
  83 005c BD46     		mov	sp, r7
  84 005e 80BC     		pop	{r7}
  85 0060 7047     		bx	lr
  86              		.cfi_endproc
  87              	.LFE26:
  89 0062 00BF     		.align	2
  90              		.global	printf_gdb
  91              		.thumb
  92              		.thumb_func
  94              	printf_gdb:
  95              	.LFB29:
  96              		.file 2 "../printf_gdb.c"
   1:../printf_gdb.c **** /*
   2:../printf_gdb.c ****  * printf_gdb.c
   3:../printf_gdb.c ****  *
   4:../printf_gdb.c ****  *  Created on: 10.07.2012
   5:../printf_gdb.c ****  *      Author: simon
   6:../printf_gdb.c ****  */
   7:../printf_gdb.c **** #include "core_cm3.h"
   8:../printf_gdb.c **** 
   9:../printf_gdb.c **** int printf_gdb(const unsigned char *format) {
  97              		.loc 2 9 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 24
 100              		@ frame_needed = 1, uses_anonymous_args = 0
 101 0064 80B5     		push	{r7, lr}
 102              	.LCFI3:
 103              		.cfi_def_cfa_offset 8
 104              		.cfi_offset 14, -4
 105              		.cfi_offset 7, -8
 106 0066 86B0     		sub	sp, sp, #24
 107              	.LCFI4:
 108              		.cfi_def_cfa_offset 32
 109 0068 00AF     		add	r7, sp, #0
 110              	.LCFI5:
 111              		.cfi_def_cfa_register 7
 112 006a 7860     		str	r0, [r7, #4]
  10:../printf_gdb.c ****   const unsigned char *fmt = format;
 113              		.loc 2 10 0
 114 006c 7B68     		ldr	r3, [r7, #4]
 115 006e 7B61     		str	r3, [r7, #20]
  11:../printf_gdb.c ****   unsigned int len = 0;
 116              		.loc 2 11 0
 117 0070 4FF00003 		mov	r3, #0
 118 0074 3B61     		str	r3, [r7, #16]
  12:../printf_gdb.c **** 
  13:../printf_gdb.c ****   while(*fmt) {
 119              		.loc 2 13 0
 120 0076 07E0     		b	.L5
 121              	.L6:
  14:../printf_gdb.c ****     fmt++;
 122              		.loc 2 14 0
 123 0078 7B69     		ldr	r3, [r7, #20]
 124 007a 03F10103 		add	r3, r3, #1
 125 007e 7B61     		str	r3, [r7, #20]
  15:../printf_gdb.c ****     len++;
 126              		.loc 2 15 0
 127 0080 3B69     		ldr	r3, [r7, #16]
 128 0082 03F10103 		add	r3, r3, #1
 129 0086 3B61     		str	r3, [r7, #16]
 130              	.L5:
  13:../printf_gdb.c ****   while(*fmt) {
 131              		.loc 2 13 0 discriminator 1
 132 0088 7B69     		ldr	r3, [r7, #20]
 133 008a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 134 008c 002B     		cmp	r3, #0
 135 008e F3D1     		bne	.L6
  16:../printf_gdb.c ****   }
  17:../printf_gdb.c **** 
  18:../printf_gdb.c ****   int sent = 0;
 136              		.loc 2 18 0
 137 0090 4FF00003 		mov	r3, #0
 138 0094 FB60     		str	r3, [r7, #12]
  19:../printf_gdb.c **** 
  20:../printf_gdb.c ****   while(sent < len)
 139              		.loc 2 20 0
 140 0096 06E0     		b	.L7
 141              	.L8:
  21:../printf_gdb.c ****   {
  22:../printf_gdb.c **** 	ITM_SendChar(format[sent]);
 142              		.loc 2 22 0
 143 0098 FB68     		ldr	r3, [r7, #12]
 144 009a 7A68     		ldr	r2, [r7, #4]
 145 009c D318     		adds	r3, r2, r3
 146 009e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 147 00a0 1846     		mov	r0, r3
 148 00a2 FFF7ADFF 		bl	ITM_SendChar
 149              	.L7:
  20:../printf_gdb.c ****   while(sent < len)
 150              		.loc 2 20 0 discriminator 1
 151 00a6 FA68     		ldr	r2, [r7, #12]
 152 00a8 3B69     		ldr	r3, [r7, #16]
 153 00aa 9A42     		cmp	r2, r3
 154 00ac F4D3     		bcc	.L8
  23:../printf_gdb.c ****   }
  24:../printf_gdb.c ****   return len;
 155              		.loc 2 24 0
 156 00ae 3B69     		ldr	r3, [r7, #16]
  25:../printf_gdb.c **** }
 157              		.loc 2 25 0
 158 00b0 1846     		mov	r0, r3
 159 00b2 07F11807 		add	r7, r7, #24
 160 00b6 BD46     		mov	sp, r7
 161 00b8 80BD     		pop	{r7, pc}
 162              		.cfi_endproc
 163              	.LFE29:
 165              	.Letext0:
 166              		.file 3 "/opt/CodeSourcery/arm-2011.09/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eab
DEFINED SYMBOLS
                            *ABS*:00000000 printf_gdb.c
     /tmp/cc8RHqKl.s:18     .text:00000000 $t
     /tmp/cc8RHqKl.s:22     .text:00000000 ITM_SendChar
     /tmp/cc8RHqKl.s:94     .text:00000064 printf_gdb
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
