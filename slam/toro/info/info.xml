<?xml version='1.0'?>

<project>
        <name>TORO - Tree-based netwORk Optimizer</name>

        <author>
		<name>Giorgio Grisetti</name>
		<url>http://www.informatik.uni-freiburg.de/~grisetti</url>
	</author>
        <author>
		<name>Cyrill Stachniss</name>
		<url>http://www.informatik.uni-freiburg.de/~stachnis</url>
	</author>
        <author>
		<name>Slawomir Grzonka</name>
		<url>http://www.informatik.uni-freiburg.de/~grzonka</url>
	</author>
        <author>
		<name>Wolfram Burgard</name>
		<url>http://www.informatik.uni-freiburg.de/~burgard</url>
	</author>

        <url>http://www.informatik.uni-freiburg.de/~stachnis/toro/</url>

        <briefdescription>
	TORO is an optimization approach for constraint-network. It
	provides an efficient, gradient descent-based error
	minimization procedure.  There is a 2D and a 3D version of
	TORO available.
        </briefdescription>

        <description>
        Recently, Olson  et al.  presented a novel approach to
        solve the graph-based SLAM problem by applying stochastic
        gradient descent to minimize the error introduced by
        constraints.  TORO is an extension of Olson's algorithm.  It
        applies a tree parameterization of the nodes in the graph that
        significantly improves the performance and enables a robot to
        cope with arbitrary network topologies. The latter allows us
        to bound the complexity of the algorithm to the size of the
        mapped area and not to the length of the trajectory.
        </description>

        <requirement>
	Developed under Linux, GCC 4.0.2 but should work anywhere where GCC runs.
	
	07/2008 Patch for compatability with gcc 4.3.x as well as MacOSX (thanks to P. Checchin)
	</requirement>

	<map>Graphs (nodes and edge)</map>

	<input>
	Nodes and edges of a graph.
	</input>

	<logformat> A set of simple text messages to represent nodes
	and edges of the graph.  Note that examples files are in the repository. See folder data.

	Format of the 2D graph files:

	  Every line in the file specifies either one vertex or one edge

	  The vertices are specified as follws:
	  VERTEX2 id x y orientation 
	  (A 2D node in the graph)

	  EDGE2 observed_vertex_id observing_vertex_id forward sideward rotate inf_ff inf_fs inf_ss inf_rr inf_fr inf_sr 
	  (A 2D-edge in the graph. inf_xx are the information matrix entries of the constraint)

	  EQUIV id1 id2 
	  (Equivalence constraints between nodes. It merges the node id1 and id2 wrt to the constraint between both vertices.)

	
	Format of the 3D graph files:

	  Every line in the file specifies either one vertex or one edge

	  The vertices are specified as follws:
	  VETREX3 x y z phi theta psi  

	  The edges are specified as follows:
	  EDGE3 observed_vertex_id observing_vertex_id x y z roll pitch yaw inf_11 inf_12 .. inf_16 inf_22 .. inf_66 
	  (the information matrix is specified via its upper triangular block that means 21 values).

	</logformat>

	<image> 
		<url>http://www.informatik.uni-freiburg.de/~stachnis/videos/grisetti07iros-toro3d.avi</url>
		<thumbnailurl>http://www.informatik.uni-freiburg.de/~stachnis/videos/grisetti07iros-toro3d.png</thumbnailurl>
		<description>Correcting a sphere in 3D</description>
	</image>
	<image> 
		<url>http://www.informatik.uni-freiburg.de/~stachnis/toro/w-200000-0.01-0.005.gsgd.png</url>
		<thumbnailurl>http://www.informatik.uni-freiburg.de/~stachnis/toro/_w-200000-0.01-0.005.gsgd.png</thumbnailurl>
		<description>A corrected  network with 200k nodes</description>
	</image>
	<image> 
		<url>http://www.informatik.uni-freiburg.de/~stachnis/toro/gsgd-w5000-noequiv.avi</url>
		<thumbnailurl>http://www.informatik.uni-freiburg.de/~stachnis/toro/_gsgd-w5000-noequiv.png</thumbnailurl>
		<description>Small video (5k nodes/30k constraints)</description>
	</image>

	<paper>
		<title>Non-linear Constraint Network Optimization for Efficient Map Learning.</title>
		<authorlist>Giorgio Grisetti, Cyrill Stachniss, and Wolfram Burgard</authorlist>
			<publishedin>IEEE Transactions on Intelligent Transportation Systems, Volume 10, Issue 3, Pages 428-439</publishedin>
				<year>2009</year>
				<url>http://www.informatik.uni-freiburg.de/~stachnis/pdf/grisetti09its.pdf</url>
	</paper>
	<paper>
		<title>Efficient Estimation of Accurate Maximum Likelihood Maps in 3D.</title>
		<authorlist>Grisetti Giorgio, Slawomir Grzonka, Cyrill Stachniss, Patrick Pfaff, and Wolfram Burgard</authorlist>
			<publishedin>IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS)</publishedin>
				<year>2007</year>
				<url>http://www.informatik.uni-freiburg.de/~stachnis/pdf/grisetti07iros.pdf</url>
	</paper>

	<paper>
		<title>A Tree Parameterization for Efficiently Computing Maximum Likelihood Maps using Gradient Descent.</title>
		<authorlist>Giorgio Grisetti, Cyrill Stachniss, Slawomir Grzonka, and Wolfram Burgard</authorlist>
			<publishedin>Robotics: Science and Systems (RSS)</publishedin>
				<year>2007</year>
				<url>http://www.informatik.uni-freiburg.de/~stachnis/pdf/grisetti07rss.pdf</url>
	</paper>

	<license>TORO is licenced under the Creative Commons
	(Attribution-NonCommercial-ShareAlike).</license>

	<furthermore>
	C++ code, quite compact, efficient, and stand-alone
	</furthermore>

</project>
