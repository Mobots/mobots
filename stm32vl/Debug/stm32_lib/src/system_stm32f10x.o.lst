   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"system_stm32f10x.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	SystemCoreClock
  19              		.data
  20              		.align	2
  23              	SystemCoreClock:
  24 0000 00366E01 		.word	24000000
  25              		.global	AHBPrescTable
  26              		.align	2
  29              	AHBPrescTable:
  30 0004 00       		.byte	0
  31 0005 00       		.byte	0
  32 0006 00       		.byte	0
  33 0007 00       		.byte	0
  34 0008 00       		.byte	0
  35 0009 00       		.byte	0
  36 000a 00       		.byte	0
  37 000b 00       		.byte	0
  38 000c 01       		.byte	1
  39 000d 02       		.byte	2
  40 000e 03       		.byte	3
  41 000f 04       		.byte	4
  42 0010 06       		.byte	6
  43 0011 07       		.byte	7
  44 0012 08       		.byte	8
  45 0013 09       		.byte	9
  46              		.text
  47              		.align	2
  48              		.global	SystemInit
  49              		.thumb
  50              		.thumb_func
  52              	SystemInit:
  53              	.LFB29:
  54              		.file 1 "../stm32_lib/src/system_stm32f10x.c"
   1:../stm32_lib/src/system_stm32f10x.c **** /**
   2:../stm32_lib/src/system_stm32f10x.c ****   ******************************************************************************
   3:../stm32_lib/src/system_stm32f10x.c ****   * @file    system_stm32f10x.c
   4:../stm32_lib/src/system_stm32f10x.c ****   * @author  MCD Application Team
   5:../stm32_lib/src/system_stm32f10x.c ****   * @version V3.3.0
   6:../stm32_lib/src/system_stm32f10x.c ****   * @date    04/16/2010
   7:../stm32_lib/src/system_stm32f10x.c ****   * @brief   CMSIS Cortex-M3 Device Peripheral Access Layer System Source File.
   8:../stm32_lib/src/system_stm32f10x.c ****   ******************************************************************************  
   9:../stm32_lib/src/system_stm32f10x.c ****   *
  10:../stm32_lib/src/system_stm32f10x.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  11:../stm32_lib/src/system_stm32f10x.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  12:../stm32_lib/src/system_stm32f10x.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  13:../stm32_lib/src/system_stm32f10x.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  14:../stm32_lib/src/system_stm32f10x.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  15:../stm32_lib/src/system_stm32f10x.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  16:../stm32_lib/src/system_stm32f10x.c ****   *
  17:../stm32_lib/src/system_stm32f10x.c ****   * <h2><center>&copy; COPYRIGHT 2010 STMicroelectronics</center></h2>
  18:../stm32_lib/src/system_stm32f10x.c ****   ******************************************************************************
  19:../stm32_lib/src/system_stm32f10x.c ****   */
  20:../stm32_lib/src/system_stm32f10x.c **** 
  21:../stm32_lib/src/system_stm32f10x.c **** /** @addtogroup CMSIS
  22:../stm32_lib/src/system_stm32f10x.c ****   * @{
  23:../stm32_lib/src/system_stm32f10x.c ****   */
  24:../stm32_lib/src/system_stm32f10x.c **** 
  25:../stm32_lib/src/system_stm32f10x.c **** /** @addtogroup stm32f10x_system
  26:../stm32_lib/src/system_stm32f10x.c ****   * @{
  27:../stm32_lib/src/system_stm32f10x.c ****   */  
  28:../stm32_lib/src/system_stm32f10x.c ****   
  29:../stm32_lib/src/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Includes
  30:../stm32_lib/src/system_stm32f10x.c ****   * @{
  31:../stm32_lib/src/system_stm32f10x.c ****   */
  32:../stm32_lib/src/system_stm32f10x.c **** 
  33:../stm32_lib/src/system_stm32f10x.c **** #include "stm32f10x.h"
  34:../stm32_lib/src/system_stm32f10x.c **** 
  35:../stm32_lib/src/system_stm32f10x.c **** /**
  36:../stm32_lib/src/system_stm32f10x.c ****   * @}
  37:../stm32_lib/src/system_stm32f10x.c ****   */
  38:../stm32_lib/src/system_stm32f10x.c **** 
  39:../stm32_lib/src/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_TypesDefinitions
  40:../stm32_lib/src/system_stm32f10x.c ****   * @{
  41:../stm32_lib/src/system_stm32f10x.c ****   */
  42:../stm32_lib/src/system_stm32f10x.c **** 
  43:../stm32_lib/src/system_stm32f10x.c **** /**
  44:../stm32_lib/src/system_stm32f10x.c ****   * @}
  45:../stm32_lib/src/system_stm32f10x.c ****   */
  46:../stm32_lib/src/system_stm32f10x.c **** 
  47:../stm32_lib/src/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Defines
  48:../stm32_lib/src/system_stm32f10x.c ****   * @{
  49:../stm32_lib/src/system_stm32f10x.c ****   */
  50:../stm32_lib/src/system_stm32f10x.c **** 
  51:../stm32_lib/src/system_stm32f10x.c **** /*!< Uncomment the line corresponding to the desired System clock (SYSCLK)
  52:../stm32_lib/src/system_stm32f10x.c ****    frequency (after reset the HSI is used as SYSCLK source)
  53:../stm32_lib/src/system_stm32f10x.c ****    
  54:../stm32_lib/src/system_stm32f10x.c ****    IMPORTANT NOTE:
  55:../stm32_lib/src/system_stm32f10x.c ****    ============== 
  56:../stm32_lib/src/system_stm32f10x.c ****    1. After each device reset the HSI is used as System clock source.
  57:../stm32_lib/src/system_stm32f10x.c **** 
  58:../stm32_lib/src/system_stm32f10x.c ****    2. Please make sure that the selected System clock doesn't exceed your device's
  59:../stm32_lib/src/system_stm32f10x.c ****       maximum frequency.
  60:../stm32_lib/src/system_stm32f10x.c ****       
  61:../stm32_lib/src/system_stm32f10x.c ****    3. If none of the define below is enabled, the HSI is used as System clock
  62:../stm32_lib/src/system_stm32f10x.c ****     source.
  63:../stm32_lib/src/system_stm32f10x.c **** 
  64:../stm32_lib/src/system_stm32f10x.c ****    4. The System clock configuration functions provided within this file assume that:
  65:../stm32_lib/src/system_stm32f10x.c ****         - For Low and Medium density Value line devices an external 8MHz crystal 
  66:../stm32_lib/src/system_stm32f10x.c ****           is used to drive the System clock.
  67:../stm32_lib/src/system_stm32f10x.c ****         - For Low, Medium and High density devices an external 8MHz crystal is
  68:../stm32_lib/src/system_stm32f10x.c ****           used to drive the System clock.
  69:../stm32_lib/src/system_stm32f10x.c ****         - For Connectivity line devices an external 25MHz crystal is used to drive
  70:../stm32_lib/src/system_stm32f10x.c ****           the System clock.
  71:../stm32_lib/src/system_stm32f10x.c ****      If you are using different crystal you have to adapt those functions accordingly.
  72:../stm32_lib/src/system_stm32f10x.c ****     */
  73:../stm32_lib/src/system_stm32f10x.c ****     
  74:../stm32_lib/src/system_stm32f10x.c **** #if defined (STM32F10X_LD_VL) || (defined STM32F10X_MD_VL) 
  75:../stm32_lib/src/system_stm32f10x.c **** /* #define SYSCLK_FREQ_HSE    HSE_Value */
  76:../stm32_lib/src/system_stm32f10x.c ****  #define SYSCLK_FREQ_24MHz  24000000
  77:../stm32_lib/src/system_stm32f10x.c **** #else
  78:../stm32_lib/src/system_stm32f10x.c **** /* #define SYSCLK_FREQ_HSE    HSE_Value */
  79:../stm32_lib/src/system_stm32f10x.c **** /* #define SYSCLK_FREQ_24MHz  24000000 */ 
  80:../stm32_lib/src/system_stm32f10x.c **** /* #define SYSCLK_FREQ_36MHz  36000000 */
  81:../stm32_lib/src/system_stm32f10x.c **** /* #define SYSCLK_FREQ_48MHz  48000000 */
  82:../stm32_lib/src/system_stm32f10x.c **** /* #define SYSCLK_FREQ_56MHz  56000000 */
  83:../stm32_lib/src/system_stm32f10x.c **** #define SYSCLK_FREQ_72MHz  72000000
  84:../stm32_lib/src/system_stm32f10x.c **** #endif
  85:../stm32_lib/src/system_stm32f10x.c **** 
  86:../stm32_lib/src/system_stm32f10x.c **** /*!< Uncomment the following line if you need to use external SRAM mounted
  87:../stm32_lib/src/system_stm32f10x.c ****      on STM3210E-EVAL board (STM32 High density and XL-density devices) as data memory  */ 
  88:../stm32_lib/src/system_stm32f10x.c **** #if defined (STM32F10X_HD) || (defined STM32F10X_XL)
  89:../stm32_lib/src/system_stm32f10x.c **** /* #define DATA_IN_ExtSRAM */
  90:../stm32_lib/src/system_stm32f10x.c **** #endif
  91:../stm32_lib/src/system_stm32f10x.c **** 
  92:../stm32_lib/src/system_stm32f10x.c **** /**
  93:../stm32_lib/src/system_stm32f10x.c ****   * @}
  94:../stm32_lib/src/system_stm32f10x.c ****   */
  95:../stm32_lib/src/system_stm32f10x.c **** 
  96:../stm32_lib/src/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Macros
  97:../stm32_lib/src/system_stm32f10x.c ****   * @{
  98:../stm32_lib/src/system_stm32f10x.c ****   */
  99:../stm32_lib/src/system_stm32f10x.c **** 
 100:../stm32_lib/src/system_stm32f10x.c **** /**
 101:../stm32_lib/src/system_stm32f10x.c ****   * @}
 102:../stm32_lib/src/system_stm32f10x.c ****   */
 103:../stm32_lib/src/system_stm32f10x.c **** 
 104:../stm32_lib/src/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Variables
 105:../stm32_lib/src/system_stm32f10x.c ****   * @{
 106:../stm32_lib/src/system_stm32f10x.c ****   */
 107:../stm32_lib/src/system_stm32f10x.c **** 
 108:../stm32_lib/src/system_stm32f10x.c **** /*******************************************************************************
 109:../stm32_lib/src/system_stm32f10x.c **** *  Clock Definitions
 110:../stm32_lib/src/system_stm32f10x.c **** *******************************************************************************/
 111:../stm32_lib/src/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 112:../stm32_lib/src/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_HSE;        /*!< System Clock Frequency (Core Cloc
 113:../stm32_lib/src/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 114:../stm32_lib/src/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_24MHz;        /*!< System Clock Frequency (Core Cl
 115:../stm32_lib/src/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 116:../stm32_lib/src/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_36MHz;        /*!< System Clock Frequency (Core Cl
 117:../stm32_lib/src/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 118:../stm32_lib/src/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_48MHz;        /*!< System Clock Frequency (Core Cl
 119:../stm32_lib/src/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 120:../stm32_lib/src/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_56MHz;        /*!< System Clock Frequency (Core Cl
 121:../stm32_lib/src/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 122:../stm32_lib/src/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_72MHz;        /*!< System Clock Frequency (Core Cl
 123:../stm32_lib/src/system_stm32f10x.c **** #else /*!< HSI Selected as System Clock source */
 124:../stm32_lib/src/system_stm32f10x.c ****   uint32_t SystemCoreClock         = HSI_Value;        /*!< System Clock Frequency (Core Clock) */
 125:../stm32_lib/src/system_stm32f10x.c **** #endif
 126:../stm32_lib/src/system_stm32f10x.c **** 
 127:../stm32_lib/src/system_stm32f10x.c **** __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 128:../stm32_lib/src/system_stm32f10x.c **** /**
 129:../stm32_lib/src/system_stm32f10x.c ****   * @}
 130:../stm32_lib/src/system_stm32f10x.c ****   */
 131:../stm32_lib/src/system_stm32f10x.c **** 
 132:../stm32_lib/src/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_FunctionPrototypes
 133:../stm32_lib/src/system_stm32f10x.c ****   * @{
 134:../stm32_lib/src/system_stm32f10x.c ****   */
 135:../stm32_lib/src/system_stm32f10x.c **** 
 136:../stm32_lib/src/system_stm32f10x.c **** static void SetSysClock(void);
 137:../stm32_lib/src/system_stm32f10x.c **** 
 138:../stm32_lib/src/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 139:../stm32_lib/src/system_stm32f10x.c ****   static void SetSysClockToHSE(void);
 140:../stm32_lib/src/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 141:../stm32_lib/src/system_stm32f10x.c ****   static void SetSysClockTo24(void);
 142:../stm32_lib/src/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 143:../stm32_lib/src/system_stm32f10x.c ****   static void SetSysClockTo36(void);
 144:../stm32_lib/src/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 145:../stm32_lib/src/system_stm32f10x.c ****   static void SetSysClockTo48(void);
 146:../stm32_lib/src/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 147:../stm32_lib/src/system_stm32f10x.c ****   static void SetSysClockTo56(void);  
 148:../stm32_lib/src/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 149:../stm32_lib/src/system_stm32f10x.c ****   static void SetSysClockTo72(void);
 150:../stm32_lib/src/system_stm32f10x.c **** #endif
 151:../stm32_lib/src/system_stm32f10x.c **** 
 152:../stm32_lib/src/system_stm32f10x.c **** #ifdef DATA_IN_ExtSRAM
 153:../stm32_lib/src/system_stm32f10x.c ****   static void SystemInit_ExtMemCtl(void); 
 154:../stm32_lib/src/system_stm32f10x.c **** #endif /* DATA_IN_ExtSRAM */
 155:../stm32_lib/src/system_stm32f10x.c **** 
 156:../stm32_lib/src/system_stm32f10x.c **** /**
 157:../stm32_lib/src/system_stm32f10x.c ****   * @}
 158:../stm32_lib/src/system_stm32f10x.c ****   */
 159:../stm32_lib/src/system_stm32f10x.c **** 
 160:../stm32_lib/src/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Functions
 161:../stm32_lib/src/system_stm32f10x.c ****   * @{
 162:../stm32_lib/src/system_stm32f10x.c ****   */
 163:../stm32_lib/src/system_stm32f10x.c **** 
 164:../stm32_lib/src/system_stm32f10x.c **** /**
 165:../stm32_lib/src/system_stm32f10x.c ****   * @brief  Setup the microcontroller system
 166:../stm32_lib/src/system_stm32f10x.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 167:../stm32_lib/src/system_stm32f10x.c ****   *         SystemCoreClock variable.
 168:../stm32_lib/src/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 169:../stm32_lib/src/system_stm32f10x.c ****   * @param  None
 170:../stm32_lib/src/system_stm32f10x.c ****   * @retval None
 171:../stm32_lib/src/system_stm32f10x.c ****   */
 172:../stm32_lib/src/system_stm32f10x.c **** void SystemInit (void)
 173:../stm32_lib/src/system_stm32f10x.c **** {
  55              		.loc 1 173 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 1, uses_anonymous_args = 0
  59 0000 80B5     		push	{r7, lr}
  60              	.LCFI0:
  61              		.cfi_def_cfa_offset 8
  62              		.cfi_offset 14, -4
  63              		.cfi_offset 7, -8
  64 0002 00AF     		add	r7, sp, #0
  65              	.LCFI1:
  66              		.cfi_def_cfa_register 7
 174:../stm32_lib/src/system_stm32f10x.c ****   /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
 175:../stm32_lib/src/system_stm32f10x.c ****   /* Set HSION bit */
 176:../stm32_lib/src/system_stm32f10x.c ****   RCC->CR |= (uint32_t)0x00000001;
  67              		.loc 1 176 0
  68 0004 4FF48053 		mov	r3, #4096
  69 0008 C4F20203 		movt	r3, 16386
  70 000c 4FF48052 		mov	r2, #4096
  71 0010 C4F20202 		movt	r2, 16386
  72 0014 1268     		ldr	r2, [r2, #0]
  73 0016 42F00102 		orr	r2, r2, #1
  74 001a 1A60     		str	r2, [r3, #0]
 177:../stm32_lib/src/system_stm32f10x.c **** 
 178:../stm32_lib/src/system_stm32f10x.c ****   /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
 179:../stm32_lib/src/system_stm32f10x.c **** #ifndef STM32F10X_CL
 180:../stm32_lib/src/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xF8FF0000;
  75              		.loc 1 180 0
  76 001c 4FF48052 		mov	r2, #4096
  77 0020 C4F20202 		movt	r2, 16386
  78 0024 4FF48053 		mov	r3, #4096
  79 0028 C4F20203 		movt	r3, 16386
  80 002c 5968     		ldr	r1, [r3, #4]
  81 002e 4FF00003 		mov	r3, #0
  82 0032 CFF6FF03 		movt	r3, 63743
  83 0036 0B40     		ands	r3, r3, r1
  84 0038 5360     		str	r3, [r2, #4]
 181:../stm32_lib/src/system_stm32f10x.c **** #else
 182:../stm32_lib/src/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xF0FF0000;
 183:../stm32_lib/src/system_stm32f10x.c **** #endif /* STM32F10X_CL */   
 184:../stm32_lib/src/system_stm32f10x.c ****   
 185:../stm32_lib/src/system_stm32f10x.c ****   /* Reset HSEON, CSSON and PLLON bits */
 186:../stm32_lib/src/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  85              		.loc 1 186 0
  86 003a 4FF48053 		mov	r3, #4096
  87 003e C4F20203 		movt	r3, 16386
  88 0042 4FF48052 		mov	r2, #4096
  89 0046 C4F20202 		movt	r2, 16386
  90 004a 1268     		ldr	r2, [r2, #0]
  91 004c 22F08472 		bic	r2, r2, #17301504
  92 0050 22F48032 		bic	r2, r2, #65536
  93 0054 1A60     		str	r2, [r3, #0]
 187:../stm32_lib/src/system_stm32f10x.c **** 
 188:../stm32_lib/src/system_stm32f10x.c ****   /* Reset HSEBYP bit */
 189:../stm32_lib/src/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  94              		.loc 1 189 0
  95 0056 4FF48053 		mov	r3, #4096
  96 005a C4F20203 		movt	r3, 16386
  97 005e 4FF48052 		mov	r2, #4096
  98 0062 C4F20202 		movt	r2, 16386
  99 0066 1268     		ldr	r2, [r2, #0]
 100 0068 22F48022 		bic	r2, r2, #262144
 101 006c 1A60     		str	r2, [r3, #0]
 190:../stm32_lib/src/system_stm32f10x.c **** 
 191:../stm32_lib/src/system_stm32f10x.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
 192:../stm32_lib/src/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xFF80FFFF;
 102              		.loc 1 192 0
 103 006e 4FF48053 		mov	r3, #4096
 104 0072 C4F20203 		movt	r3, 16386
 105 0076 4FF48052 		mov	r2, #4096
 106 007a C4F20202 		movt	r2, 16386
 107 007e 5268     		ldr	r2, [r2, #4]
 108 0080 22F4FE02 		bic	r2, r2, #8323072
 109 0084 5A60     		str	r2, [r3, #4]
 193:../stm32_lib/src/system_stm32f10x.c **** 
 194:../stm32_lib/src/system_stm32f10x.c **** #ifdef STM32F10X_CL
 195:../stm32_lib/src/system_stm32f10x.c ****   /* Reset PLL2ON and PLL3ON bits */
 196:../stm32_lib/src/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xEBFFFFFF;
 197:../stm32_lib/src/system_stm32f10x.c **** 
 198:../stm32_lib/src/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 199:../stm32_lib/src/system_stm32f10x.c ****   RCC->CIR = 0x00FF0000;
 200:../stm32_lib/src/system_stm32f10x.c **** 
 201:../stm32_lib/src/system_stm32f10x.c ****   /* Reset CFGR2 register */
 202:../stm32_lib/src/system_stm32f10x.c ****   RCC->CFGR2 = 0x00000000;
 203:../stm32_lib/src/system_stm32f10x.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) 
 204:../stm32_lib/src/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 205:../stm32_lib/src/system_stm32f10x.c ****   RCC->CIR = 0x009F0000;
 110              		.loc 1 205 0
 111 0086 4FF48053 		mov	r3, #4096
 112 008a C4F20203 		movt	r3, 16386
 113 008e 4FF41F02 		mov	r2, #10420224
 114 0092 9A60     		str	r2, [r3, #8]
 206:../stm32_lib/src/system_stm32f10x.c **** 
 207:../stm32_lib/src/system_stm32f10x.c ****   /* Reset CFGR2 register */
 208:../stm32_lib/src/system_stm32f10x.c ****   RCC->CFGR2 = 0x00000000;      
 115              		.loc 1 208 0
 116 0094 4FF48053 		mov	r3, #4096
 117 0098 C4F20203 		movt	r3, 16386
 118 009c 4FF00002 		mov	r2, #0
 119 00a0 DA62     		str	r2, [r3, #44]
 209:../stm32_lib/src/system_stm32f10x.c **** #else
 210:../stm32_lib/src/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 211:../stm32_lib/src/system_stm32f10x.c ****   RCC->CIR = 0x009F0000;
 212:../stm32_lib/src/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 213:../stm32_lib/src/system_stm32f10x.c ****     
 214:../stm32_lib/src/system_stm32f10x.c **** #if defined (STM32F10X_HD) || (defined STM32F10X_XL)
 215:../stm32_lib/src/system_stm32f10x.c ****   #ifdef DATA_IN_ExtSRAM
 216:../stm32_lib/src/system_stm32f10x.c ****     SystemInit_ExtMemCtl(); 
 217:../stm32_lib/src/system_stm32f10x.c ****   #endif /* DATA_IN_ExtSRAM */
 218:../stm32_lib/src/system_stm32f10x.c **** #endif 
 219:../stm32_lib/src/system_stm32f10x.c **** 
 220:../stm32_lib/src/system_stm32f10x.c ****   /* Configure the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers */
 221:../stm32_lib/src/system_stm32f10x.c ****   /* Configure the Flash Latency cycles and enable prefetch buffer */
 222:../stm32_lib/src/system_stm32f10x.c ****   SetSysClock();
 120              		.loc 1 222 0
 121 00a2 00F09FF8 		bl	SetSysClock
 223:../stm32_lib/src/system_stm32f10x.c **** }
 122              		.loc 1 223 0
 123 00a6 80BD     		pop	{r7, pc}
 124              		.cfi_endproc
 125              	.LFE29:
 127              		.align	2
 128              		.global	SystemCoreClockUpdate
 129              		.thumb
 130              		.thumb_func
 132              	SystemCoreClockUpdate:
 133              	.LFB30:
 224:../stm32_lib/src/system_stm32f10x.c **** 
 225:../stm32_lib/src/system_stm32f10x.c **** /**
 226:../stm32_lib/src/system_stm32f10x.c ****   * @brief  Update SystemCoreClock according to Clock Register Values
 227:../stm32_lib/src/system_stm32f10x.c ****   * @note   None
 228:../stm32_lib/src/system_stm32f10x.c ****   * @param  None
 229:../stm32_lib/src/system_stm32f10x.c ****   * @retval None
 230:../stm32_lib/src/system_stm32f10x.c ****   */
 231:../stm32_lib/src/system_stm32f10x.c **** void SystemCoreClockUpdate (void)
 232:../stm32_lib/src/system_stm32f10x.c **** {
 134              		.loc 1 232 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 16
 137              		@ frame_needed = 1, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 139 00a8 80B4     		push	{r7}
 140              	.LCFI2:
 141              		.cfi_def_cfa_offset 4
 142              		.cfi_offset 7, -4
 143 00aa 85B0     		sub	sp, sp, #20
 144              	.LCFI3:
 145              		.cfi_def_cfa_offset 24
 146 00ac 00AF     		add	r7, sp, #0
 147              	.LCFI4:
 148              		.cfi_def_cfa_register 7
 233:../stm32_lib/src/system_stm32f10x.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0;
 149              		.loc 1 233 0
 150 00ae 4FF00003 		mov	r3, #0
 151 00b2 FB60     		str	r3, [r7, #12]
 152 00b4 4FF00003 		mov	r3, #0
 153 00b8 BB60     		str	r3, [r7, #8]
 154 00ba 4FF00003 		mov	r3, #0
 155 00be 7B60     		str	r3, [r7, #4]
 234:../stm32_lib/src/system_stm32f10x.c **** 
 235:../stm32_lib/src/system_stm32f10x.c **** #ifdef  STM32F10X_CL
 236:../stm32_lib/src/system_stm32f10x.c ****   uint32_t prediv1source = 0, prediv1factor = 0, prediv2factor = 0, pll2mull = 0;
 237:../stm32_lib/src/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 238:../stm32_lib/src/system_stm32f10x.c **** 
 239:../stm32_lib/src/system_stm32f10x.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL)
 240:../stm32_lib/src/system_stm32f10x.c ****   uint32_t prediv1factor = 0;
 156              		.loc 1 240 0
 157 00c0 4FF00003 		mov	r3, #0
 158 00c4 3B60     		str	r3, [r7, #0]
 241:../stm32_lib/src/system_stm32f10x.c **** #endif /* STM32F10X_LD_VL or STM32F10X_MD_VL */
 242:../stm32_lib/src/system_stm32f10x.c ****     
 243:../stm32_lib/src/system_stm32f10x.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 244:../stm32_lib/src/system_stm32f10x.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 159              		.loc 1 244 0
 160 00c6 4FF48053 		mov	r3, #4096
 161 00ca C4F20203 		movt	r3, 16386
 162 00ce 5B68     		ldr	r3, [r3, #4]
 163 00d0 03F00C03 		and	r3, r3, #12
 164 00d4 FB60     		str	r3, [r7, #12]
 245:../stm32_lib/src/system_stm32f10x.c ****   
 246:../stm32_lib/src/system_stm32f10x.c ****   switch (tmp)
 165              		.loc 1 246 0
 166 00d6 FB68     		ldr	r3, [r7, #12]
 167 00d8 042B     		cmp	r3, #4
 168 00da 0DD0     		beq	.L5
 169 00dc 082B     		cmp	r3, #8
 170 00de 15D0     		beq	.L6
 171 00e0 002B     		cmp	r3, #0
 172 00e2 53D1     		bne	.L10
 173              	.L4:
 247:../stm32_lib/src/system_stm32f10x.c ****   {
 248:../stm32_lib/src/system_stm32f10x.c ****     case 0x00:  /* HSI used as system clock */
 249:../stm32_lib/src/system_stm32f10x.c ****       SystemCoreClock = HSI_Value;
 174              		.loc 1 249 0
 175 00e4 40F20003 		movw	r3, #:lower16:SystemCoreClock
 176 00e8 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 177 00ec 4FF49052 		mov	r2, #4608
 178 00f0 C0F27A02 		movt	r2, 122
 179 00f4 1A60     		str	r2, [r3, #0]
 250:../stm32_lib/src/system_stm32f10x.c ****       break;
 180              		.loc 1 250 0
 181 00f6 53E0     		b	.L7
 182              	.L5:
 251:../stm32_lib/src/system_stm32f10x.c ****     case 0x04:  /* HSE used as system clock */
 252:../stm32_lib/src/system_stm32f10x.c ****       SystemCoreClock = HSE_Value;
 183              		.loc 1 252 0
 184 00f8 40F20003 		movw	r3, #:lower16:SystemCoreClock
 185 00fc C0F20003 		movt	r3, #:upper16:SystemCoreClock
 186 0100 4FF49052 		mov	r2, #4608
 187 0104 C0F27A02 		movt	r2, 122
 188 0108 1A60     		str	r2, [r3, #0]
 253:../stm32_lib/src/system_stm32f10x.c ****       break;
 189              		.loc 1 253 0
 190 010a 49E0     		b	.L7
 191              	.L6:
 254:../stm32_lib/src/system_stm32f10x.c ****     case 0x08:  /* PLL used as system clock */
 255:../stm32_lib/src/system_stm32f10x.c **** 
 256:../stm32_lib/src/system_stm32f10x.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 257:../stm32_lib/src/system_stm32f10x.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
 192              		.loc 1 257 0
 193 010c 4FF48053 		mov	r3, #4096
 194 0110 C4F20203 		movt	r3, 16386
 195 0114 5B68     		ldr	r3, [r3, #4]
 196 0116 03F47013 		and	r3, r3, #3932160
 197 011a BB60     		str	r3, [r7, #8]
 258:../stm32_lib/src/system_stm32f10x.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 198              		.loc 1 258 0
 199 011c 4FF48053 		mov	r3, #4096
 200 0120 C4F20203 		movt	r3, 16386
 201 0124 5B68     		ldr	r3, [r3, #4]
 202 0126 03F48033 		and	r3, r3, #65536
 203 012a 7B60     		str	r3, [r7, #4]
 259:../stm32_lib/src/system_stm32f10x.c ****       
 260:../stm32_lib/src/system_stm32f10x.c **** #ifndef STM32F10X_CL      
 261:../stm32_lib/src/system_stm32f10x.c ****       pllmull = ( pllmull >> 18) + 2;
 204              		.loc 1 261 0
 205 012c BB68     		ldr	r3, [r7, #8]
 206 012e 4FEA9343 		lsr	r3, r3, #18
 207 0132 03F10203 		add	r3, r3, #2
 208 0136 BB60     		str	r3, [r7, #8]
 262:../stm32_lib/src/system_stm32f10x.c ****       
 263:../stm32_lib/src/system_stm32f10x.c ****       if (pllsource == 0x00)
 209              		.loc 1 263 0
 210 0138 7B68     		ldr	r3, [r7, #4]
 211 013a 002B     		cmp	r3, #0
 212 013c 0CD1     		bne	.L8
 264:../stm32_lib/src/system_stm32f10x.c ****       {
 265:../stm32_lib/src/system_stm32f10x.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 266:../stm32_lib/src/system_stm32f10x.c ****         SystemCoreClock = (HSI_Value >> 1) * pllmull;
 213              		.loc 1 266 0
 214 013e BA68     		ldr	r2, [r7, #8]
 215 0140 4FF41063 		mov	r3, #2304
 216 0144 C0F23D03 		movt	r3, 61
 217 0148 03FB02F2 		mul	r2, r3, r2
 218 014c 40F20003 		movw	r3, #:lower16:SystemCoreClock
 219 0150 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 220 0154 1A60     		str	r2, [r3, #0]
 267:../stm32_lib/src/system_stm32f10x.c ****       }
 268:../stm32_lib/src/system_stm32f10x.c ****       else
 269:../stm32_lib/src/system_stm32f10x.c ****       {
 270:../stm32_lib/src/system_stm32f10x.c ****  #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL)
 271:../stm32_lib/src/system_stm32f10x.c ****        prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 272:../stm32_lib/src/system_stm32f10x.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 273:../stm32_lib/src/system_stm32f10x.c ****        SystemCoreClock = (HSE_Value / prediv1factor) * pllmull; 
 274:../stm32_lib/src/system_stm32f10x.c ****  #else
 275:../stm32_lib/src/system_stm32f10x.c ****         /* HSE selected as PLL clock entry */
 276:../stm32_lib/src/system_stm32f10x.c ****         if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
 277:../stm32_lib/src/system_stm32f10x.c ****         {/* HSE oscillator clock divided by 2 */
 278:../stm32_lib/src/system_stm32f10x.c ****           SystemCoreClock = (HSE_Value >> 1) * pllmull;
 279:../stm32_lib/src/system_stm32f10x.c ****         }
 280:../stm32_lib/src/system_stm32f10x.c ****         else
 281:../stm32_lib/src/system_stm32f10x.c ****         {
 282:../stm32_lib/src/system_stm32f10x.c ****           SystemCoreClock = HSE_Value * pllmull;
 283:../stm32_lib/src/system_stm32f10x.c ****         }
 284:../stm32_lib/src/system_stm32f10x.c ****  #endif
 285:../stm32_lib/src/system_stm32f10x.c ****       }
 286:../stm32_lib/src/system_stm32f10x.c **** #else
 287:../stm32_lib/src/system_stm32f10x.c ****       pllmull = pllmull >> 18;
 288:../stm32_lib/src/system_stm32f10x.c ****       
 289:../stm32_lib/src/system_stm32f10x.c ****       if (pllmull != 0x0D)
 290:../stm32_lib/src/system_stm32f10x.c ****       {
 291:../stm32_lib/src/system_stm32f10x.c ****          pllmull += 2;
 292:../stm32_lib/src/system_stm32f10x.c ****       }
 293:../stm32_lib/src/system_stm32f10x.c ****       else
 294:../stm32_lib/src/system_stm32f10x.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 295:../stm32_lib/src/system_stm32f10x.c ****         pllmull = 13 / 2; 
 296:../stm32_lib/src/system_stm32f10x.c ****       }
 297:../stm32_lib/src/system_stm32f10x.c ****             
 298:../stm32_lib/src/system_stm32f10x.c ****       if (pllsource == 0x00)
 299:../stm32_lib/src/system_stm32f10x.c ****       {
 300:../stm32_lib/src/system_stm32f10x.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 301:../stm32_lib/src/system_stm32f10x.c ****         SystemCoreClock = (HSI_Value >> 1) * pllmull;
 302:../stm32_lib/src/system_stm32f10x.c ****       }
 303:../stm32_lib/src/system_stm32f10x.c ****       else
 304:../stm32_lib/src/system_stm32f10x.c ****       {/* PREDIV1 selected as PLL clock entry */
 305:../stm32_lib/src/system_stm32f10x.c ****         
 306:../stm32_lib/src/system_stm32f10x.c ****         /* Get PREDIV1 clock source and division factor */
 307:../stm32_lib/src/system_stm32f10x.c ****         prediv1source = RCC->CFGR2 & RCC_CFGR2_PREDIV1SRC;
 308:../stm32_lib/src/system_stm32f10x.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 309:../stm32_lib/src/system_stm32f10x.c ****         
 310:../stm32_lib/src/system_stm32f10x.c ****         if (prediv1source == 0)
 311:../stm32_lib/src/system_stm32f10x.c ****         { 
 312:../stm32_lib/src/system_stm32f10x.c ****           /* HSE oscillator clock selected as PREDIV1 clock entry */
 313:../stm32_lib/src/system_stm32f10x.c ****           SystemCoreClock = (HSE_Value / prediv1factor) * pllmull;          
 314:../stm32_lib/src/system_stm32f10x.c ****         }
 315:../stm32_lib/src/system_stm32f10x.c ****         else
 316:../stm32_lib/src/system_stm32f10x.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 317:../stm32_lib/src/system_stm32f10x.c ****           
 318:../stm32_lib/src/system_stm32f10x.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 319:../stm32_lib/src/system_stm32f10x.c ****           prediv2factor = ((RCC->CFGR2 & RCC_CFGR2_PREDIV2) >> 4) + 1;
 320:../stm32_lib/src/system_stm32f10x.c ****           pll2mull = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> 8 ) + 2; 
 321:../stm32_lib/src/system_stm32f10x.c ****           SystemCoreClock = (((HSE_Value / prediv2factor) * pll2mull) / prediv1factor) * pllmull;  
 322:../stm32_lib/src/system_stm32f10x.c ****         }
 323:../stm32_lib/src/system_stm32f10x.c ****       }
 324:../stm32_lib/src/system_stm32f10x.c **** #endif /* STM32F10X_CL */ 
 325:../stm32_lib/src/system_stm32f10x.c ****       break;
 221              		.loc 1 325 0
 222 0156 23E0     		b	.L7
 223              	.L8:
 271:../stm32_lib/src/system_stm32f10x.c ****        prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 224              		.loc 1 271 0
 225 0158 4FF48053 		mov	r3, #4096
 226 015c C4F20203 		movt	r3, 16386
 227 0160 DB6A     		ldr	r3, [r3, #44]
 228 0162 03F00F03 		and	r3, r3, #15
 229 0166 03F10103 		add	r3, r3, #1
 230 016a 3B60     		str	r3, [r7, #0]
 273:../stm32_lib/src/system_stm32f10x.c ****        SystemCoreClock = (HSE_Value / prediv1factor) * pllmull; 
 231              		.loc 1 273 0
 232 016c 4FF49053 		mov	r3, #4608
 233 0170 C0F27A03 		movt	r3, 122
 234 0174 3A68     		ldr	r2, [r7, #0]
 235 0176 B3FBF2F3 		udiv	r3, r3, r2
 236 017a BA68     		ldr	r2, [r7, #8]
 237 017c 02FB03F2 		mul	r2, r2, r3
 238 0180 40F20003 		movw	r3, #:lower16:SystemCoreClock
 239 0184 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 240 0188 1A60     		str	r2, [r3, #0]
 241              		.loc 1 325 0
 242 018a 09E0     		b	.L7
 243              	.L10:
 326:../stm32_lib/src/system_stm32f10x.c **** 
 327:../stm32_lib/src/system_stm32f10x.c ****     default:
 328:../stm32_lib/src/system_stm32f10x.c ****       SystemCoreClock = HSI_Value;
 244              		.loc 1 328 0
 245 018c 40F20003 		movw	r3, #:lower16:SystemCoreClock
 246 0190 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 247 0194 4FF49052 		mov	r2, #4608
 248 0198 C0F27A02 		movt	r2, 122
 249 019c 1A60     		str	r2, [r3, #0]
 329:../stm32_lib/src/system_stm32f10x.c ****       break;
 250              		.loc 1 329 0
 251 019e 00BF     		nop
 252              	.L7:
 330:../stm32_lib/src/system_stm32f10x.c ****   }
 331:../stm32_lib/src/system_stm32f10x.c ****   
 332:../stm32_lib/src/system_stm32f10x.c ****   /* Compute HCLK clock frequency ----------------*/
 333:../stm32_lib/src/system_stm32f10x.c ****   /* Get HCLK prescaler */
 334:../stm32_lib/src/system_stm32f10x.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 253              		.loc 1 334 0
 254 01a0 4FF48053 		mov	r3, #4096
 255 01a4 C4F20203 		movt	r3, 16386
 256 01a8 5B68     		ldr	r3, [r3, #4]
 257 01aa 03F0F003 		and	r3, r3, #240
 258 01ae 4FEA1312 		lsr	r2, r3, #4
 259 01b2 40F20003 		movw	r3, #:lower16:AHBPrescTable
 260 01b6 C0F20003 		movt	r3, #:upper16:AHBPrescTable
 261 01ba 9B5C     		ldrb	r3, [r3, r2]
 262 01bc DBB2     		uxtb	r3, r3
 263 01be FB60     		str	r3, [r7, #12]
 335:../stm32_lib/src/system_stm32f10x.c ****   /* HCLK clock frequency */
 336:../stm32_lib/src/system_stm32f10x.c ****   SystemCoreClock >>= tmp;  
 264              		.loc 1 336 0
 265 01c0 40F20003 		movw	r3, #:lower16:SystemCoreClock
 266 01c4 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 267 01c8 1A68     		ldr	r2, [r3, #0]
 268 01ca FB68     		ldr	r3, [r7, #12]
 269 01cc 22FA03F2 		lsr	r2, r2, r3
 270 01d0 40F20003 		movw	r3, #:lower16:SystemCoreClock
 271 01d4 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 272 01d8 1A60     		str	r2, [r3, #0]
 337:../stm32_lib/src/system_stm32f10x.c **** }
 273              		.loc 1 337 0
 274 01da 07F11407 		add	r7, r7, #20
 275 01de BD46     		mov	sp, r7
 276 01e0 80BC     		pop	{r7}
 277 01e2 7047     		bx	lr
 278              		.cfi_endproc
 279              	.LFE30:
 281              		.align	2
 282              		.thumb
 283              		.thumb_func
 285              	SetSysClock:
 286              	.LFB31:
 338:../stm32_lib/src/system_stm32f10x.c **** 
 339:../stm32_lib/src/system_stm32f10x.c **** /**
 340:../stm32_lib/src/system_stm32f10x.c ****   * @brief  Configures the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers.
 341:../stm32_lib/src/system_stm32f10x.c ****   * @param  None
 342:../stm32_lib/src/system_stm32f10x.c ****   * @retval None
 343:../stm32_lib/src/system_stm32f10x.c ****   */
 344:../stm32_lib/src/system_stm32f10x.c **** static void SetSysClock(void)
 345:../stm32_lib/src/system_stm32f10x.c **** {
 287              		.loc 1 345 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 1, uses_anonymous_args = 0
 291 01e4 80B5     		push	{r7, lr}
 292              	.LCFI5:
 293              		.cfi_def_cfa_offset 8
 294              		.cfi_offset 14, -4
 295              		.cfi_offset 7, -8
 296 01e6 00AF     		add	r7, sp, #0
 297              	.LCFI6:
 298              		.cfi_def_cfa_register 7
 346:../stm32_lib/src/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 347:../stm32_lib/src/system_stm32f10x.c ****   SetSysClockToHSE();
 348:../stm32_lib/src/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 349:../stm32_lib/src/system_stm32f10x.c ****   SetSysClockTo24();
 299              		.loc 1 349 0
 300 01e8 00F002F8 		bl	SetSysClockTo24
 350:../stm32_lib/src/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 351:../stm32_lib/src/system_stm32f10x.c ****   SetSysClockTo36();
 352:../stm32_lib/src/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 353:../stm32_lib/src/system_stm32f10x.c ****   SetSysClockTo48();
 354:../stm32_lib/src/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 355:../stm32_lib/src/system_stm32f10x.c ****   SetSysClockTo56();  
 356:../stm32_lib/src/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 357:../stm32_lib/src/system_stm32f10x.c ****   SetSysClockTo72();
 358:../stm32_lib/src/system_stm32f10x.c **** #endif
 359:../stm32_lib/src/system_stm32f10x.c ****  
 360:../stm32_lib/src/system_stm32f10x.c ****  /* If none of the define above is enabled, the HSI is used as System clock
 361:../stm32_lib/src/system_stm32f10x.c ****     source (default after reset) */ 
 362:../stm32_lib/src/system_stm32f10x.c **** }
 301              		.loc 1 362 0
 302 01ec 80BD     		pop	{r7, pc}
 303              		.cfi_endproc
 304              	.LFE31:
 306 01ee 00BF     		.align	2
 307              		.thumb
 308              		.thumb_func
 310              	SetSysClockTo24:
 311              	.LFB32:
 363:../stm32_lib/src/system_stm32f10x.c **** 
 364:../stm32_lib/src/system_stm32f10x.c **** /**
 365:../stm32_lib/src/system_stm32f10x.c ****   * @brief  Setup the external memory controller. Called in startup_stm32f10x.s 
 366:../stm32_lib/src/system_stm32f10x.c ****   *          before jump to __main
 367:../stm32_lib/src/system_stm32f10x.c ****   * @param  None
 368:../stm32_lib/src/system_stm32f10x.c ****   * @retval None
 369:../stm32_lib/src/system_stm32f10x.c ****   */ 
 370:../stm32_lib/src/system_stm32f10x.c **** #ifdef DATA_IN_ExtSRAM
 371:../stm32_lib/src/system_stm32f10x.c **** /**
 372:../stm32_lib/src/system_stm32f10x.c ****   * @brief  Setup the external memory controller. 
 373:../stm32_lib/src/system_stm32f10x.c ****   *         Called in startup_stm32f10x_xx.s/.c before jump to main.
 374:../stm32_lib/src/system_stm32f10x.c ****   * 	      This function configures the external SRAM mounted on STM3210E-EVAL
 375:../stm32_lib/src/system_stm32f10x.c ****   *         board (STM32 High density devices). This SRAM will be used as program
 376:../stm32_lib/src/system_stm32f10x.c ****   *         data memory (including heap and stack).
 377:../stm32_lib/src/system_stm32f10x.c ****   * @param  None
 378:../stm32_lib/src/system_stm32f10x.c ****   * @retval None
 379:../stm32_lib/src/system_stm32f10x.c ****   */ 
 380:../stm32_lib/src/system_stm32f10x.c **** void SystemInit_ExtMemCtl(void) 
 381:../stm32_lib/src/system_stm32f10x.c **** {
 382:../stm32_lib/src/system_stm32f10x.c **** /*!< FSMC Bank1 NOR/SRAM3 is used for the STM3210E-EVAL, if another Bank is 
 383:../stm32_lib/src/system_stm32f10x.c ****   required, then adjust the Register Addresses */
 384:../stm32_lib/src/system_stm32f10x.c **** 
 385:../stm32_lib/src/system_stm32f10x.c ****   /* Enable FSMC clock */
 386:../stm32_lib/src/system_stm32f10x.c ****   RCC->AHBENR = 0x00000114;
 387:../stm32_lib/src/system_stm32f10x.c ****   
 388:../stm32_lib/src/system_stm32f10x.c ****   /* Enable GPIOD, GPIOE, GPIOF and GPIOG clocks */  
 389:../stm32_lib/src/system_stm32f10x.c ****   RCC->APB2ENR = 0x000001E0;
 390:../stm32_lib/src/system_stm32f10x.c ****   
 391:../stm32_lib/src/system_stm32f10x.c **** /* ---------------  SRAM Data lines, NOE and NWE configuration ---------------*/
 392:../stm32_lib/src/system_stm32f10x.c **** /*----------------  SRAM Address lines configuration -------------------------*/
 393:../stm32_lib/src/system_stm32f10x.c **** /*----------------  NOE and NWE configuration --------------------------------*/  
 394:../stm32_lib/src/system_stm32f10x.c **** /*----------------  NE3 configuration ----------------------------------------*/
 395:../stm32_lib/src/system_stm32f10x.c **** /*----------------  NBL0, NBL1 configuration ---------------------------------*/
 396:../stm32_lib/src/system_stm32f10x.c ****   
 397:../stm32_lib/src/system_stm32f10x.c ****   GPIOD->CRL = 0x44BB44BB;  
 398:../stm32_lib/src/system_stm32f10x.c ****   GPIOD->CRH = 0xBBBBBBBB;
 399:../stm32_lib/src/system_stm32f10x.c **** 
 400:../stm32_lib/src/system_stm32f10x.c ****   GPIOE->CRL = 0xB44444BB;  
 401:../stm32_lib/src/system_stm32f10x.c ****   GPIOE->CRH = 0xBBBBBBBB;
 402:../stm32_lib/src/system_stm32f10x.c **** 
 403:../stm32_lib/src/system_stm32f10x.c ****   GPIOF->CRL = 0x44BBBBBB;  
 404:../stm32_lib/src/system_stm32f10x.c ****   GPIOF->CRH = 0xBBBB4444;
 405:../stm32_lib/src/system_stm32f10x.c **** 
 406:../stm32_lib/src/system_stm32f10x.c ****   GPIOG->CRL = 0x44BBBBBB;  
 407:../stm32_lib/src/system_stm32f10x.c ****   GPIOG->CRH = 0x44444B44;
 408:../stm32_lib/src/system_stm32f10x.c ****    
 409:../stm32_lib/src/system_stm32f10x.c **** /*----------------  FSMC Configuration ---------------------------------------*/  
 410:../stm32_lib/src/system_stm32f10x.c **** /*----------------  Enable FSMC Bank1_SRAM Bank ------------------------------*/
 411:../stm32_lib/src/system_stm32f10x.c ****   
 412:../stm32_lib/src/system_stm32f10x.c ****   FSMC_Bank1->BTCR[4] = 0x00001011;
 413:../stm32_lib/src/system_stm32f10x.c ****   FSMC_Bank1->BTCR[5] = 0x00000200;
 414:../stm32_lib/src/system_stm32f10x.c **** }
 415:../stm32_lib/src/system_stm32f10x.c **** #endif /* DATA_IN_ExtSRAM */
 416:../stm32_lib/src/system_stm32f10x.c **** 
 417:../stm32_lib/src/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 418:../stm32_lib/src/system_stm32f10x.c **** /**
 419:../stm32_lib/src/system_stm32f10x.c ****   * @brief  Selects HSE as System clock source and configure HCLK, PCLK2
 420:../stm32_lib/src/system_stm32f10x.c ****   *          and PCLK1 prescalers.
 421:../stm32_lib/src/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 422:../stm32_lib/src/system_stm32f10x.c ****   * @param  None
 423:../stm32_lib/src/system_stm32f10x.c ****   * @retval None
 424:../stm32_lib/src/system_stm32f10x.c ****   */
 425:../stm32_lib/src/system_stm32f10x.c **** static void SetSysClockToHSE(void)
 426:../stm32_lib/src/system_stm32f10x.c **** {
 427:../stm32_lib/src/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 428:../stm32_lib/src/system_stm32f10x.c ****   
 429:../stm32_lib/src/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 430:../stm32_lib/src/system_stm32f10x.c ****   /* Enable HSE */    
 431:../stm32_lib/src/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 432:../stm32_lib/src/system_stm32f10x.c ****  
 433:../stm32_lib/src/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 434:../stm32_lib/src/system_stm32f10x.c ****   do
 435:../stm32_lib/src/system_stm32f10x.c ****   {
 436:../stm32_lib/src/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 437:../stm32_lib/src/system_stm32f10x.c ****     StartUpCounter++;  
 438:../stm32_lib/src/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSEStartUp_TimeOut));
 439:../stm32_lib/src/system_stm32f10x.c **** 
 440:../stm32_lib/src/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 441:../stm32_lib/src/system_stm32f10x.c ****   {
 442:../stm32_lib/src/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 443:../stm32_lib/src/system_stm32f10x.c ****   }
 444:../stm32_lib/src/system_stm32f10x.c ****   else
 445:../stm32_lib/src/system_stm32f10x.c ****   {
 446:../stm32_lib/src/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 447:../stm32_lib/src/system_stm32f10x.c ****   }  
 448:../stm32_lib/src/system_stm32f10x.c **** 
 449:../stm32_lib/src/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 450:../stm32_lib/src/system_stm32f10x.c ****   {
 451:../stm32_lib/src/system_stm32f10x.c **** 
 452:../stm32_lib/src/system_stm32f10x.c **** #if !defined STM32F10X_LD_VL && !defined STM32F10X_MD_VL 
 453:../stm32_lib/src/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 454:../stm32_lib/src/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 455:../stm32_lib/src/system_stm32f10x.c **** 
 456:../stm32_lib/src/system_stm32f10x.c ****     /* Flash 0 wait state */
 457:../stm32_lib/src/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 458:../stm32_lib/src/system_stm32f10x.c **** 
 459:../stm32_lib/src/system_stm32f10x.c **** #ifndef STM32F10X_CL
 460:../stm32_lib/src/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;
 461:../stm32_lib/src/system_stm32f10x.c **** #else
 462:../stm32_lib/src/system_stm32f10x.c ****     if (HSE_Value <= 24000000)
 463:../stm32_lib/src/system_stm32f10x.c **** 	{
 464:../stm32_lib/src/system_stm32f10x.c ****       FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;
 465:../stm32_lib/src/system_stm32f10x.c **** 	}
 466:../stm32_lib/src/system_stm32f10x.c **** 	else
 467:../stm32_lib/src/system_stm32f10x.c **** 	{
 468:../stm32_lib/src/system_stm32f10x.c ****       FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_1;
 469:../stm32_lib/src/system_stm32f10x.c **** 	}
 470:../stm32_lib/src/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 471:../stm32_lib/src/system_stm32f10x.c **** #endif
 472:../stm32_lib/src/system_stm32f10x.c ****  
 473:../stm32_lib/src/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 474:../stm32_lib/src/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 475:../stm32_lib/src/system_stm32f10x.c ****       
 476:../stm32_lib/src/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 477:../stm32_lib/src/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 478:../stm32_lib/src/system_stm32f10x.c ****     
 479:../stm32_lib/src/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 480:../stm32_lib/src/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 481:../stm32_lib/src/system_stm32f10x.c ****     
 482:../stm32_lib/src/system_stm32f10x.c ****     /* Select HSE as system clock source */
 483:../stm32_lib/src/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 484:../stm32_lib/src/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_HSE;    
 485:../stm32_lib/src/system_stm32f10x.c **** 
 486:../stm32_lib/src/system_stm32f10x.c ****     /* Wait till HSE is used as system clock source */
 487:../stm32_lib/src/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x04)
 488:../stm32_lib/src/system_stm32f10x.c ****     {
 489:../stm32_lib/src/system_stm32f10x.c ****     }
 490:../stm32_lib/src/system_stm32f10x.c ****   }
 491:../stm32_lib/src/system_stm32f10x.c ****   else
 492:../stm32_lib/src/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 493:../stm32_lib/src/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 494:../stm32_lib/src/system_stm32f10x.c ****   }  
 495:../stm32_lib/src/system_stm32f10x.c **** }
 496:../stm32_lib/src/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 497:../stm32_lib/src/system_stm32f10x.c **** /**
 498:../stm32_lib/src/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 24MHz and configure HCLK, PCLK2 
 499:../stm32_lib/src/system_stm32f10x.c ****   *          and PCLK1 prescalers.
 500:../stm32_lib/src/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 501:../stm32_lib/src/system_stm32f10x.c ****   * @param  None
 502:../stm32_lib/src/system_stm32f10x.c ****   * @retval None
 503:../stm32_lib/src/system_stm32f10x.c ****   */
 504:../stm32_lib/src/system_stm32f10x.c **** static void SetSysClockTo24(void)
 505:../stm32_lib/src/system_stm32f10x.c **** {
 312              		.loc 1 505 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 8
 315              		@ frame_needed = 1, uses_anonymous_args = 0
 316              		@ link register save eliminated.
 317 01f0 80B4     		push	{r7}
 318              	.LCFI7:
 319              		.cfi_def_cfa_offset 4
 320              		.cfi_offset 7, -4
 321 01f2 83B0     		sub	sp, sp, #12
 322              	.LCFI8:
 323              		.cfi_def_cfa_offset 16
 324 01f4 00AF     		add	r7, sp, #0
 325              	.LCFI9:
 326              		.cfi_def_cfa_register 7
 506:../stm32_lib/src/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 327              		.loc 1 506 0
 328 01f6 4FF00003 		mov	r3, #0
 329 01fa 7B60     		str	r3, [r7, #4]
 330 01fc 4FF00003 		mov	r3, #0
 331 0200 3B60     		str	r3, [r7, #0]
 507:../stm32_lib/src/system_stm32f10x.c ****   
 508:../stm32_lib/src/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 509:../stm32_lib/src/system_stm32f10x.c ****   /* Enable HSE */    
 510:../stm32_lib/src/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 332              		.loc 1 510 0
 333 0202 4FF48053 		mov	r3, #4096
 334 0206 C4F20203 		movt	r3, 16386
 335 020a 4FF48052 		mov	r2, #4096
 336 020e C4F20202 		movt	r2, 16386
 337 0212 1268     		ldr	r2, [r2, #0]
 338 0214 42F48032 		orr	r2, r2, #65536
 339 0218 1A60     		str	r2, [r3, #0]
 340              	.L14:
 511:../stm32_lib/src/system_stm32f10x.c ****  
 512:../stm32_lib/src/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 513:../stm32_lib/src/system_stm32f10x.c ****   do
 514:../stm32_lib/src/system_stm32f10x.c ****   {
 515:../stm32_lib/src/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 341              		.loc 1 515 0 discriminator 1
 342 021a 4FF48053 		mov	r3, #4096
 343 021e C4F20203 		movt	r3, 16386
 344 0222 1B68     		ldr	r3, [r3, #0]
 345 0224 03F40033 		and	r3, r3, #131072
 346 0228 3B60     		str	r3, [r7, #0]
 516:../stm32_lib/src/system_stm32f10x.c ****     StartUpCounter++;  
 347              		.loc 1 516 0 discriminator 1
 348 022a 7B68     		ldr	r3, [r7, #4]
 349 022c 03F10103 		add	r3, r3, #1
 350 0230 7B60     		str	r3, [r7, #4]
 517:../stm32_lib/src/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSEStartUp_TimeOut));
 351              		.loc 1 517 0 discriminator 1
 352 0232 3B68     		ldr	r3, [r7, #0]
 353 0234 002B     		cmp	r3, #0
 354 0236 03D1     		bne	.L13
 355 0238 7B68     		ldr	r3, [r7, #4]
 356 023a B3F5A06F 		cmp	r3, #1280
 357 023e ECD1     		bne	.L14
 358              	.L13:
 518:../stm32_lib/src/system_stm32f10x.c **** 
 519:../stm32_lib/src/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 359              		.loc 1 519 0
 360 0240 4FF48053 		mov	r3, #4096
 361 0244 C4F20203 		movt	r3, 16386
 362 0248 1B68     		ldr	r3, [r3, #0]
 363 024a 03F40033 		and	r3, r3, #131072
 364 024e 002B     		cmp	r3, #0
 365 0250 03D0     		beq	.L15
 520:../stm32_lib/src/system_stm32f10x.c ****   {
 521:../stm32_lib/src/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 366              		.loc 1 521 0
 367 0252 4FF00103 		mov	r3, #1
 368 0256 3B60     		str	r3, [r7, #0]
 369 0258 02E0     		b	.L16
 370              	.L15:
 522:../stm32_lib/src/system_stm32f10x.c ****   }
 523:../stm32_lib/src/system_stm32f10x.c ****   else
 524:../stm32_lib/src/system_stm32f10x.c ****   {
 525:../stm32_lib/src/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 371              		.loc 1 525 0
 372 025a 4FF00003 		mov	r3, #0
 373 025e 3B60     		str	r3, [r7, #0]
 374              	.L16:
 526:../stm32_lib/src/system_stm32f10x.c ****   }  
 527:../stm32_lib/src/system_stm32f10x.c **** 
 528:../stm32_lib/src/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 375              		.loc 1 528 0
 376 0260 3B68     		ldr	r3, [r7, #0]
 377 0262 012B     		cmp	r3, #1
 378 0264 6DD1     		bne	.L12
 529:../stm32_lib/src/system_stm32f10x.c ****   {
 530:../stm32_lib/src/system_stm32f10x.c **** #if !defined STM32F10X_LD_VL && !defined STM32F10X_MD_VL 
 531:../stm32_lib/src/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 532:../stm32_lib/src/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 533:../stm32_lib/src/system_stm32f10x.c **** 
 534:../stm32_lib/src/system_stm32f10x.c ****     /* Flash 0 wait state */
 535:../stm32_lib/src/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 536:../stm32_lib/src/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;    
 537:../stm32_lib/src/system_stm32f10x.c **** #endif
 538:../stm32_lib/src/system_stm32f10x.c ****  
 539:../stm32_lib/src/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 540:../stm32_lib/src/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 379              		.loc 1 540 0
 380 0266 4FF48053 		mov	r3, #4096
 381 026a C4F20203 		movt	r3, 16386
 382 026e 4FF48052 		mov	r2, #4096
 383 0272 C4F20202 		movt	r2, 16386
 384 0276 5268     		ldr	r2, [r2, #4]
 385 0278 5A60     		str	r2, [r3, #4]
 541:../stm32_lib/src/system_stm32f10x.c ****       
 542:../stm32_lib/src/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 543:../stm32_lib/src/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 386              		.loc 1 543 0
 387 027a 4FF48053 		mov	r3, #4096
 388 027e C4F20203 		movt	r3, 16386
 389 0282 4FF48052 		mov	r2, #4096
 390 0286 C4F20202 		movt	r2, 16386
 391 028a 5268     		ldr	r2, [r2, #4]
 392 028c 5A60     		str	r2, [r3, #4]
 544:../stm32_lib/src/system_stm32f10x.c ****     
 545:../stm32_lib/src/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 546:../stm32_lib/src/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 393              		.loc 1 546 0
 394 028e 4FF48053 		mov	r3, #4096
 395 0292 C4F20203 		movt	r3, 16386
 396 0296 4FF48052 		mov	r2, #4096
 397 029a C4F20202 		movt	r2, 16386
 398 029e 5268     		ldr	r2, [r2, #4]
 399 02a0 5A60     		str	r2, [r3, #4]
 547:../stm32_lib/src/system_stm32f10x.c ****     
 548:../stm32_lib/src/system_stm32f10x.c **** #ifdef STM32F10X_CL
 549:../stm32_lib/src/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 550:../stm32_lib/src/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 6 = 24 MHz */ 
 551:../stm32_lib/src/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 552:../stm32_lib/src/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 553:../stm32_lib/src/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL6); 
 554:../stm32_lib/src/system_stm32f10x.c **** 
 555:../stm32_lib/src/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 556:../stm32_lib/src/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 10 = 4 MHz */       
 557:../stm32_lib/src/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 558:../stm32_lib/src/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 559:../stm32_lib/src/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 560:../stm32_lib/src/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV10);
 561:../stm32_lib/src/system_stm32f10x.c ****   
 562:../stm32_lib/src/system_stm32f10x.c ****     /* Enable PLL2 */
 563:../stm32_lib/src/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 564:../stm32_lib/src/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 565:../stm32_lib/src/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 566:../stm32_lib/src/system_stm32f10x.c ****     {
 567:../stm32_lib/src/system_stm32f10x.c ****     }   
 568:../stm32_lib/src/system_stm32f10x.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL)
 569:../stm32_lib/src/system_stm32f10x.c ****     /*  PLL configuration:  = (HSE / 2) * 6 = 24 MHz */
 570:../stm32_lib/src/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 400              		.loc 1 570 0
 401 02a2 4FF48053 		mov	r3, #4096
 402 02a6 C4F20203 		movt	r3, 16386
 403 02aa 4FF48052 		mov	r2, #4096
 404 02ae C4F20202 		movt	r2, 16386
 405 02b2 5268     		ldr	r2, [r2, #4]
 406 02b4 22F47C12 		bic	r2, r2, #4128768
 407 02b8 5A60     		str	r2, [r3, #4]
 571:../stm32_lib/src/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_PREDIV1 | RCC_CFGR_PLLXTPRE_PREDIV1_Div2 | RCC_CFGR_PLL
 408              		.loc 1 571 0
 409 02ba 4FF48053 		mov	r3, #4096
 410 02be C4F20203 		movt	r3, 16386
 411 02c2 4FF48052 		mov	r2, #4096
 412 02c6 C4F20202 		movt	r2, 16386
 413 02ca 5268     		ldr	r2, [r2, #4]
 414 02cc 42F49812 		orr	r2, r2, #1245184
 415 02d0 5A60     		str	r2, [r3, #4]
 572:../stm32_lib/src/system_stm32f10x.c **** #else    
 573:../stm32_lib/src/system_stm32f10x.c ****     /*  PLL configuration:  = (HSE / 2) * 6 = 24 MHz */
 574:../stm32_lib/src/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 575:../stm32_lib/src/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLXTPRE_HSE_Div2 | RCC_CFGR_PLLMULL6);
 576:../stm32_lib/src/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 577:../stm32_lib/src/system_stm32f10x.c **** 
 578:../stm32_lib/src/system_stm32f10x.c ****     /* Enable PLL */
 579:../stm32_lib/src/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 416              		.loc 1 579 0
 417 02d2 4FF48053 		mov	r3, #4096
 418 02d6 C4F20203 		movt	r3, 16386
 419 02da 4FF48052 		mov	r2, #4096
 420 02de C4F20202 		movt	r2, 16386
 421 02e2 1268     		ldr	r2, [r2, #0]
 422 02e4 42F08072 		orr	r2, r2, #16777216
 423 02e8 1A60     		str	r2, [r3, #0]
 580:../stm32_lib/src/system_stm32f10x.c **** 
 581:../stm32_lib/src/system_stm32f10x.c ****     /* Wait till PLL is ready */
 582:../stm32_lib/src/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 424              		.loc 1 582 0
 425 02ea 00BF     		nop
 426              	.L18:
 427              		.loc 1 582 0 is_stmt 0 discriminator 1
 428 02ec 4FF48053 		mov	r3, #4096
 429 02f0 C4F20203 		movt	r3, 16386
 430 02f4 1B68     		ldr	r3, [r3, #0]
 431 02f6 03F00073 		and	r3, r3, #33554432
 432 02fa 002B     		cmp	r3, #0
 433 02fc F6D0     		beq	.L18
 583:../stm32_lib/src/system_stm32f10x.c ****     {
 584:../stm32_lib/src/system_stm32f10x.c ****     }
 585:../stm32_lib/src/system_stm32f10x.c **** 
 586:../stm32_lib/src/system_stm32f10x.c ****     /* Select PLL as system clock source */
 587:../stm32_lib/src/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 434              		.loc 1 587 0 is_stmt 1
 435 02fe 4FF48053 		mov	r3, #4096
 436 0302 C4F20203 		movt	r3, 16386
 437 0306 4FF48052 		mov	r2, #4096
 438 030a C4F20202 		movt	r2, 16386
 439 030e 5268     		ldr	r2, [r2, #4]
 440 0310 22F00302 		bic	r2, r2, #3
 441 0314 5A60     		str	r2, [r3, #4]
 588:../stm32_lib/src/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 442              		.loc 1 588 0
 443 0316 4FF48053 		mov	r3, #4096
 444 031a C4F20203 		movt	r3, 16386
 445 031e 4FF48052 		mov	r2, #4096
 446 0322 C4F20202 		movt	r2, 16386
 447 0326 5268     		ldr	r2, [r2, #4]
 448 0328 42F00202 		orr	r2, r2, #2
 449 032c 5A60     		str	r2, [r3, #4]
 589:../stm32_lib/src/system_stm32f10x.c **** 
 590:../stm32_lib/src/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 591:../stm32_lib/src/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 450              		.loc 1 591 0
 451 032e 00BF     		nop
 452              	.L19:
 453              		.loc 1 591 0 is_stmt 0 discriminator 1
 454 0330 4FF48053 		mov	r3, #4096
 455 0334 C4F20203 		movt	r3, 16386
 456 0338 5B68     		ldr	r3, [r3, #4]
 457 033a 03F00C03 		and	r3, r3, #12
 458 033e 082B     		cmp	r3, #8
 459 0340 F6D1     		bne	.L19
 460              	.L12:
 592:../stm32_lib/src/system_stm32f10x.c ****     {
 593:../stm32_lib/src/system_stm32f10x.c ****     }
 594:../stm32_lib/src/system_stm32f10x.c ****   }
 595:../stm32_lib/src/system_stm32f10x.c ****   else
 596:../stm32_lib/src/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 597:../stm32_lib/src/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 598:../stm32_lib/src/system_stm32f10x.c ****   } 
 599:../stm32_lib/src/system_stm32f10x.c **** }
 461              		.loc 1 599 0 is_stmt 1
 462 0342 07F10C07 		add	r7, r7, #12
 463 0346 BD46     		mov	sp, r7
 464 0348 80BC     		pop	{r7}
 465 034a 7047     		bx	lr
 466              		.cfi_endproc
 467              	.LFE32:
 469              	.Letext0:
 470              		.file 2 "/opt/CodeSourcery/arm-2011.09/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eab
 471              		.file 3 "/home/simon/Workspace/stm32vl/stm32_lib/inc/stm32f10x.h"
 472              		.file 4 "/home/simon/Workspace/stm32vl/stm32_lib/inc/core_cm3.h"
 473              		.file 5 "/home/simon/Workspace/stm32vl/stm32_lib/inc/system_stm32f10x.h"
DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f10x.c
     /tmp/ccUZRLB1.s:23     .data:00000000 SystemCoreClock
     /tmp/ccUZRLB1.s:20     .data:00000000 $d
     /tmp/ccUZRLB1.s:29     .data:00000004 AHBPrescTable
     /tmp/ccUZRLB1.s:47     .text:00000000 $t
     /tmp/ccUZRLB1.s:52     .text:00000000 SystemInit
     /tmp/ccUZRLB1.s:285    .text:000001e4 SetSysClock
     /tmp/ccUZRLB1.s:132    .text:000000a8 SystemCoreClockUpdate
     /tmp/ccUZRLB1.s:310    .text:000001f0 SetSysClockTo24
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
